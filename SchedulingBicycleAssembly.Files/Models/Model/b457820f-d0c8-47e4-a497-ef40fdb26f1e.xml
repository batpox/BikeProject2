<Fragment>
  <Compatibility ParseElementFunctionsInExpressionsLast="True" ParseNonEntityAssociatedObjectForPropertyReference="False" AllowInteractiveEntryOfNonStandardElementNames="False" ParsePropertiesForObjectTypeForAutoCreatedObjectsFirst="False" />
  <Lists>
    <StringList Name="OrderStatus">
      <Items>
        <Item Value="New" />
        <Item Value="WIP" />
      </Items>
    </StringList>
    <StringList Name="MaterialColor">
      <Items>
        <Item Value="Green" />
        <Item Value="White" />
        <Item Value="None" />
      </Items>
    </StringList>
  </Lists>
  <PropertyDefinitions>
    <Categories>
      <Category Name="Basic Logic" Description="Basic Logic" />
      <Category Name="Process Logic" Description="Process Logic" />
      <Category Name="Crossing Logic" Description="Crossing Logic" />
      <Category Name="Transport Logic" Description="Transport Logic" />
      <Category Name="Travel Logic" Description="Travel Logic" />
      <Category Name="Routing Logic" Description="Routing Logic" />
      <Category Name="Routing Logic/Other Routing Out Options" Description="Routing Logic/Other Routing Out Options" InitiallyExpanded="False" />
      <Category Name="Population" Description="Population" InitiallyExpanded="False" />
      <Category Name="Results Classification" Description="Results Classification" InitiallyExpanded="False" />
      <Category Name="Stopping Conditions" Description="Stopping Conditions" InitiallyExpanded="False" />
      <Category Name="Input Flow Control" Description="Input Flow Control" />
      <Category Name="Financials" Description="Financials" InitiallyExpanded="False" />
      <Category Name="Financials/Transport Costs" Description="Transport Costs" InitiallyExpanded="False" />
      <Category Name="Financials/Resource Costs" Description="Resource Costs" InitiallyExpanded="False" />
      <Category Name="Shortest Path Calculations" Description="Shortest Path Calculations" InitiallyExpanded="False" />
      <Category Name="Advanced Options" Description="Advanced Options" InitiallyExpanded="False" />
    </Categories>
    <SelectionRuleProperty Name="GlobalSelectionRule" DefaultValue="Standard Dispatching Rule" NullString="None" />
    <IntegerProperty Name="Assemblers1stShiftQty" DefaultValue="10" NullString="null" />
    <IntegerProperty Name="Assemblers2ndShiftQty" DefaultValue="10" NullString="null" />
    <IntegerProperty Name="OperatorsQty" DefaultValue="5" NullString="null" />
    <Overrides>
      <Override Name="ReportStatistics" Visible="False" />
      <Override Name="ParentCostCenter" Visible="False" />
      <Override Name="InitialCost" Visible="False" />
      <Override Name="InitialCostRate" Visible="False" />
      <Override Name="ResourceIdleCostRate" Visible="False" />
      <Override Name="ResourceCostPerUse" Visible="False" />
      <Override Name="ResourceUsageCostRate" Visible="False" />
      <Override Name="LogResourceUsage" Visible="False" />
      <Override Name="DisplayName" Visible="False" />
      <Override Name="DisplayCategory" Visible="False" />
      <Override Name="DisplayColor" Visible="False" />
      <Override Name="IncludeInPlanResourceConstraints" Visible="False" />
      <Override Name="CapacityType" Visible="False" />
      <Override Name="InitialWorkSchedule" Visible="False" />
      <Override Name="WorkDayExceptions" Visible="False" />
      <Override Name="WorkPeriodExceptions" Visible="False" />
      <Override Name="InitialCapacity" Visible="False" />
      <Override Name="RankingRule" Visible="False" />
      <Override Name="RankingExpression" Visible="False" />
      <Override Name="DynamicSelectionRule" Visible="False" />
      <Override Name="CurrentSizeIndex" Visible="False" />
      <Override Name="TransferInConstraintsType" Visible="False" />
      <Override Name="TransferOutConstraintsType" Visible="False" />
      <Override Name="ExpectedSetupTimeExpression" Visible="False" />
      <Override Name="ExpectedOperationTimeExpression" Visible="False" />
    </Overrides>
  </PropertyDefinitions>
  <States>
    <IntegerState Name="CurrentRowNumber" />
    <IntegerState Name="WorkerID" />
  </States>
  <Events />
  <UsedObjects>
    <UsedObject Name="TransferNode" />
    <UsedObject Name="Server" />
    <UsedObject Name="Source" />
    <UsedObject Name="ModelEntity" />
    <UsedObject Name="AssemblyLineServer" />
    <UsedObject Name="Sink" />
    <UsedObject Name="Worker" />
    <UsedObject Name="Combiner" />
    <UsedObject Name="Vehicle" />
    <UsedObject Name="Separator" />
    <UsedObject Name="ComponentManufacturingServer" />
    <UsedObject Name="ComponentManufacturingTransferNode" />
    <UsedObject Name="AssemblyLineTransferNode" />
  </UsedObjects>
  <Elements>
    <Element Type="ChangeoverLogic" Name="SequenceDependentSetupMatrix" Scope="Public">
      <Properties>
        <Property Name="SetupTransitions">
          <Rows>
            <Properties>
              <Property Name="OperationAttribute">Materials.MaterialColor</Property>
              <Property Name="UseChangeoverMatrix">False</Property>
              <Property Name="FromValueType">Specific</Property>
              <Property Name="SetupTime">Routings.SetupTime</Property>
            </Properties>
            <Properties>
              <Property Name="OperationAttribute">Materials.MaterialColor</Property>
              <Property Name="ChangeoverMatrixName">Resources.ChangeoverMatrix</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="SetupEfficiencyMultiplier">Resources.ChangeoverEfficiency</Property>
      </Properties>
    </Element>
    <Element Type="Material" AutoCreated="True" Name="EcoBikeSTDGreen" Scope="Public">
      <Properties>
        <Property Name="InitialQuantities">
          <Value>MaterialLots</Value>
          <Rows>
            <Properties>
              <Property Name="InitialQuantitiesInitialQuantity">MaterialLots.Quantity</Property>
              <Property Name="InitialQuantitiesLotID">MaterialLots.LotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ReplenishmentPolicy">
          <Value>None</Value>
        </Property>
        <Property Name="CostPerUnit" Units="USD">Materials.MaterialCost</Property>
        <Property Name="AllowPartialAllocationCondition">True</Property>
        <Property Name="LogMaterialUsage">True</Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" AutoCreated="True" Name="StateStatistic1" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>Materials.MaterialName.QuantityInStock</Value>
        </Property>
        <Property Name="DataSource">Materials.MaterialName</Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">Materials.Area</Property>
      </Properties>
    </Element>
    <Element Type="Material" AutoCreated="True" Name="EcoBikeSTDWhite" Scope="Public">
      <Properties>
        <Property Name="InitialQuantities">
          <Value>MaterialLots</Value>
          <Rows>
            <Properties>
              <Property Name="InitialQuantitiesInitialQuantity">MaterialLots.Quantity</Property>
              <Property Name="InitialQuantitiesLotID">MaterialLots.LotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ReplenishmentPolicy">
          <Value>None</Value>
        </Property>
        <Property Name="CostPerUnit" Units="USD">Materials.MaterialCost</Property>
        <Property Name="AllowPartialAllocationCondition">True</Property>
        <Property Name="LogMaterialUsage">True</Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" AutoCreated="True" Name="StateStatistic2" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>Materials.MaterialName.QuantityInStock</Value>
        </Property>
        <Property Name="DataSource">Materials.MaterialName</Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">Materials.Area</Property>
      </Properties>
    </Element>
    <Element Type="Material" AutoCreated="True" Name="EcoBikeEXTGreen" Scope="Public">
      <Properties>
        <Property Name="InitialQuantities">
          <Value>MaterialLots</Value>
          <Rows>
            <Properties>
              <Property Name="InitialQuantitiesInitialQuantity">MaterialLots.Quantity</Property>
              <Property Name="InitialQuantitiesLotID">MaterialLots.LotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ReplenishmentPolicy">
          <Value>None</Value>
        </Property>
        <Property Name="CostPerUnit" Units="USD">Materials.MaterialCost</Property>
        <Property Name="AllowPartialAllocationCondition">True</Property>
        <Property Name="LogMaterialUsage">True</Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" AutoCreated="True" Name="StateStatistic3" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>Materials.MaterialName.QuantityInStock</Value>
        </Property>
        <Property Name="DataSource">Materials.MaterialName</Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">Materials.Area</Property>
      </Properties>
    </Element>
    <Element Type="Material" AutoCreated="True" Name="EcoBikeEXTWhite" Scope="Public">
      <Properties>
        <Property Name="InitialQuantities">
          <Value>MaterialLots</Value>
          <Rows>
            <Properties>
              <Property Name="InitialQuantitiesInitialQuantity">MaterialLots.Quantity</Property>
              <Property Name="InitialQuantitiesLotID">MaterialLots.LotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ReplenishmentPolicy">
          <Value>None</Value>
        </Property>
        <Property Name="CostPerUnit" Units="USD">Materials.MaterialCost</Property>
        <Property Name="AllowPartialAllocationCondition">True</Property>
        <Property Name="LogMaterialUsage">True</Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" AutoCreated="True" Name="StateStatistic4" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>Materials.MaterialName.QuantityInStock</Value>
        </Property>
        <Property Name="DataSource">Materials.MaterialName</Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">Materials.Area</Property>
      </Properties>
    </Element>
    <Element Type="Material" AutoCreated="True" Name="Frame" Scope="Public">
      <Properties>
        <Property Name="InitialQuantities">
          <Value>MaterialLots</Value>
          <Rows>
            <Properties>
              <Property Name="InitialQuantitiesInitialQuantity">MaterialLots.Quantity</Property>
              <Property Name="InitialQuantitiesLotID">MaterialLots.LotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ReplenishmentPolicy">
          <Value>None</Value>
        </Property>
        <Property Name="CostPerUnit" Units="USD">Materials.MaterialCost</Property>
        <Property Name="AllowPartialAllocationCondition">True</Property>
        <Property Name="LogMaterialUsage">True</Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" AutoCreated="True" Name="StateStatistic5" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>Materials.MaterialName.QuantityInStock</Value>
        </Property>
        <Property Name="DataSource">Materials.MaterialName</Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">Materials.Area</Property>
      </Properties>
    </Element>
    <Element Type="Material" AutoCreated="True" Name="GreenFinishedFrame" Scope="Public">
      <Properties>
        <Property Name="InitialQuantities">
          <Value>MaterialLots</Value>
          <Rows>
            <Properties>
              <Property Name="InitialQuantitiesInitialQuantity">MaterialLots.Quantity</Property>
              <Property Name="InitialQuantitiesLotID">MaterialLots.LotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ReplenishmentPolicy">
          <Value>None</Value>
        </Property>
        <Property Name="CostPerUnit" Units="USD">Materials.MaterialCost</Property>
        <Property Name="AllowPartialAllocationCondition">True</Property>
        <Property Name="LogMaterialUsage">True</Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" AutoCreated="True" Name="StateStatistic6" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>Materials.MaterialName.QuantityInStock</Value>
        </Property>
        <Property Name="DataSource">Materials.MaterialName</Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">Materials.Area</Property>
      </Properties>
    </Element>
    <Element Type="Material" AutoCreated="True" Name="WhiteFinishedFrame" Scope="Public">
      <Properties>
        <Property Name="InitialQuantities">
          <Value>MaterialLots</Value>
          <Rows>
            <Properties>
              <Property Name="InitialQuantitiesInitialQuantity">MaterialLots.Quantity</Property>
              <Property Name="InitialQuantitiesLotID">MaterialLots.LotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ReplenishmentPolicy">
          <Value>None</Value>
        </Property>
        <Property Name="CostPerUnit" Units="USD">Materials.MaterialCost</Property>
        <Property Name="AllowPartialAllocationCondition">True</Property>
        <Property Name="LogMaterialUsage">True</Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" AutoCreated="True" Name="StateStatistic7" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>Materials.MaterialName.QuantityInStock</Value>
        </Property>
        <Property Name="DataSource">Materials.MaterialName</Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">Materials.Area</Property>
      </Properties>
    </Element>
    <Element Type="Material" AutoCreated="True" Name="Fork" Scope="Public">
      <Properties>
        <Property Name="InitialQuantities">
          <Value>MaterialLots</Value>
          <Rows>
            <Properties>
              <Property Name="InitialQuantitiesInitialQuantity">MaterialLots.Quantity</Property>
              <Property Name="InitialQuantitiesLotID">MaterialLots.LotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ReplenishmentPolicy">
          <Value>None</Value>
        </Property>
        <Property Name="CostPerUnit" Units="USD">Materials.MaterialCost</Property>
        <Property Name="AllowPartialAllocationCondition">True</Property>
        <Property Name="LogMaterialUsage">True</Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" AutoCreated="True" Name="StateStatistic8" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>Materials.MaterialName.QuantityInStock</Value>
        </Property>
        <Property Name="DataSource">Materials.MaterialName</Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">Materials.Area</Property>
      </Properties>
    </Element>
    <Element Type="Material" AutoCreated="True" Name="GreenFinishedFork" Scope="Public">
      <Properties>
        <Property Name="InitialQuantities">
          <Value>MaterialLots</Value>
          <Rows>
            <Properties>
              <Property Name="InitialQuantitiesInitialQuantity">MaterialLots.Quantity</Property>
              <Property Name="InitialQuantitiesLotID">MaterialLots.LotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ReplenishmentPolicy">
          <Value>None</Value>
        </Property>
        <Property Name="CostPerUnit" Units="USD">Materials.MaterialCost</Property>
        <Property Name="AllowPartialAllocationCondition">True</Property>
        <Property Name="LogMaterialUsage">True</Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" AutoCreated="True" Name="StateStatistic9" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>Materials.MaterialName.QuantityInStock</Value>
        </Property>
        <Property Name="DataSource">Materials.MaterialName</Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">Materials.Area</Property>
      </Properties>
    </Element>
    <Element Type="Material" AutoCreated="True" Name="WhiteFinishedFork" Scope="Public">
      <Properties>
        <Property Name="InitialQuantities">
          <Value>MaterialLots</Value>
          <Rows>
            <Properties>
              <Property Name="InitialQuantitiesInitialQuantity">MaterialLots.Quantity</Property>
              <Property Name="InitialQuantitiesLotID">MaterialLots.LotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ReplenishmentPolicy">
          <Value>None</Value>
        </Property>
        <Property Name="CostPerUnit" Units="USD">Materials.MaterialCost</Property>
        <Property Name="AllowPartialAllocationCondition">True</Property>
        <Property Name="LogMaterialUsage">True</Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" AutoCreated="True" Name="StateStatistic10" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>Materials.MaterialName.QuantityInStock</Value>
        </Property>
        <Property Name="DataSource">Materials.MaterialName</Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">Materials.Area</Property>
      </Properties>
    </Element>
    <Element Type="Material" AutoCreated="True" Name="HandleBar" Scope="Public">
      <Properties>
        <Property Name="InitialQuantities">
          <Value>MaterialLots</Value>
          <Rows>
            <Properties>
              <Property Name="InitialQuantitiesInitialQuantity">MaterialLots.Quantity</Property>
              <Property Name="InitialQuantitiesLotID">MaterialLots.LotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ReplenishmentPolicy">
          <Value>None</Value>
        </Property>
        <Property Name="CostPerUnit" Units="USD">Materials.MaterialCost</Property>
        <Property Name="AllowPartialAllocationCondition">True</Property>
        <Property Name="LogMaterialUsage">True</Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" AutoCreated="True" Name="StateStatistic11" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>Materials.MaterialName.QuantityInStock</Value>
        </Property>
        <Property Name="DataSource">Materials.MaterialName</Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">Materials.Area</Property>
      </Properties>
    </Element>
    <Element Type="Material" AutoCreated="True" Name="GreenFinishedHandleBar" Scope="Public">
      <Properties>
        <Property Name="InitialQuantities">
          <Value>MaterialLots</Value>
          <Rows>
            <Properties>
              <Property Name="InitialQuantitiesInitialQuantity">MaterialLots.Quantity</Property>
              <Property Name="InitialQuantitiesLotID">MaterialLots.LotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ReplenishmentPolicy">
          <Value>None</Value>
        </Property>
        <Property Name="CostPerUnit" Units="USD">Materials.MaterialCost</Property>
        <Property Name="AllowPartialAllocationCondition">True</Property>
        <Property Name="LogMaterialUsage">True</Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" AutoCreated="True" Name="StateStatistic12" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>Materials.MaterialName.QuantityInStock</Value>
        </Property>
        <Property Name="DataSource">Materials.MaterialName</Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">Materials.Area</Property>
      </Properties>
    </Element>
    <Element Type="Material" AutoCreated="True" Name="WhiteFinishedHandleBar" Scope="Public">
      <Properties>
        <Property Name="InitialQuantities">
          <Value>MaterialLots</Value>
          <Rows>
            <Properties>
              <Property Name="InitialQuantitiesInitialQuantity">MaterialLots.Quantity</Property>
              <Property Name="InitialQuantitiesLotID">MaterialLots.LotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ReplenishmentPolicy">
          <Value>None</Value>
        </Property>
        <Property Name="CostPerUnit" Units="USD">Materials.MaterialCost</Property>
        <Property Name="AllowPartialAllocationCondition">True</Property>
        <Property Name="LogMaterialUsage">True</Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" AutoCreated="True" Name="StateStatistic13" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>Materials.MaterialName.QuantityInStock</Value>
        </Property>
        <Property Name="DataSource">Materials.MaterialName</Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">Materials.Area</Property>
      </Properties>
    </Element>
    <Element Type="Material" AutoCreated="True" Name="Seat" Scope="Public">
      <Properties>
        <Property Name="InitialQuantities">
          <Value>MaterialLots</Value>
          <Rows>
            <Properties>
              <Property Name="InitialQuantitiesInitialQuantity">MaterialLots.Quantity</Property>
              <Property Name="InitialQuantitiesLotID">MaterialLots.LotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ReplenishmentPolicy">
          <Value>None</Value>
        </Property>
        <Property Name="CostPerUnit" Units="USD">Materials.MaterialCost</Property>
        <Property Name="AllowPartialAllocationCondition">True</Property>
        <Property Name="LogMaterialUsage">True</Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" AutoCreated="True" Name="StateStatistic14" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>Materials.MaterialName.QuantityInStock</Value>
        </Property>
        <Property Name="DataSource">Materials.MaterialName</Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">Materials.Area</Property>
      </Properties>
    </Element>
    <Element Type="Material" AutoCreated="True" Name="BrakeSet" Scope="Public">
      <Properties>
        <Property Name="InitialQuantities">
          <Value>MaterialLots</Value>
          <Rows>
            <Properties>
              <Property Name="InitialQuantitiesInitialQuantity">MaterialLots.Quantity</Property>
              <Property Name="InitialQuantitiesLotID">MaterialLots.LotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ReplenishmentPolicy">
          <Value>None</Value>
        </Property>
        <Property Name="CostPerUnit" Units="USD">Materials.MaterialCost</Property>
        <Property Name="AllowPartialAllocationCondition">True</Property>
        <Property Name="LogMaterialUsage">True</Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" AutoCreated="True" Name="StateStatistic15" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>Materials.MaterialName.QuantityInStock</Value>
        </Property>
        <Property Name="DataSource">Materials.MaterialName</Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">Materials.Area</Property>
      </Properties>
    </Element>
    <Element Type="Material" AutoCreated="True" Name="WheelSet" Scope="Public">
      <Properties>
        <Property Name="InitialQuantities">
          <Value>MaterialLots</Value>
          <Rows>
            <Properties>
              <Property Name="InitialQuantitiesInitialQuantity">MaterialLots.Quantity</Property>
              <Property Name="InitialQuantitiesLotID">MaterialLots.LotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ReplenishmentPolicy">
          <Value>None</Value>
        </Property>
        <Property Name="CostPerUnit" Units="USD">Materials.MaterialCost</Property>
        <Property Name="AllowPartialAllocationCondition">True</Property>
        <Property Name="LogMaterialUsage">True</Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" AutoCreated="True" Name="StateStatistic16" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>Materials.MaterialName.QuantityInStock</Value>
        </Property>
        <Property Name="DataSource">Materials.MaterialName</Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">Materials.Area</Property>
      </Properties>
    </Element>
    <Element Type="Material" AutoCreated="True" Name="StdBattery" Scope="Public">
      <Properties>
        <Property Name="InitialQuantities">
          <Value>MaterialLots</Value>
          <Rows>
            <Properties>
              <Property Name="InitialQuantitiesInitialQuantity">MaterialLots.Quantity</Property>
              <Property Name="InitialQuantitiesLotID">MaterialLots.LotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ReplenishmentPolicy">
          <Value>None</Value>
        </Property>
        <Property Name="CostPerUnit" Units="USD">Materials.MaterialCost</Property>
        <Property Name="AllowPartialAllocationCondition">True</Property>
        <Property Name="LogMaterialUsage">True</Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" AutoCreated="True" Name="StateStatistic17" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>Materials.MaterialName.QuantityInStock</Value>
        </Property>
        <Property Name="DataSource">Materials.MaterialName</Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">Materials.Area</Property>
      </Properties>
    </Element>
    <Element Type="Material" AutoCreated="True" Name="ExtBattery" Scope="Public">
      <Properties>
        <Property Name="InitialQuantities">
          <Value>MaterialLots</Value>
          <Rows>
            <Properties>
              <Property Name="InitialQuantitiesInitialQuantity">MaterialLots.Quantity</Property>
              <Property Name="InitialQuantitiesLotID">MaterialLots.LotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ReplenishmentPolicy">
          <Value>None</Value>
        </Property>
        <Property Name="CostPerUnit" Units="USD">Materials.MaterialCost</Property>
        <Property Name="AllowPartialAllocationCondition">True</Property>
        <Property Name="LogMaterialUsage">True</Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" AutoCreated="True" Name="StateStatistic18" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>Materials.MaterialName.QuantityInStock</Value>
        </Property>
        <Property Name="DataSource">Materials.MaterialName</Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">Materials.Area</Property>
      </Properties>
    </Element>
    <Element Type="Material" AutoCreated="True" Name="Motor" Scope="Public">
      <Properties>
        <Property Name="InitialQuantities">
          <Value>MaterialLots</Value>
          <Rows>
            <Properties>
              <Property Name="InitialQuantitiesInitialQuantity">MaterialLots.Quantity</Property>
              <Property Name="InitialQuantitiesLotID">MaterialLots.LotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ReplenishmentPolicy">
          <Value>None</Value>
        </Property>
        <Property Name="CostPerUnit" Units="USD">Materials.MaterialCost</Property>
        <Property Name="AllowPartialAllocationCondition">True</Property>
        <Property Name="LogMaterialUsage">True</Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" AutoCreated="True" Name="StateStatistic19" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>Materials.MaterialName.QuantityInStock</Value>
        </Property>
        <Property Name="DataSource">Materials.MaterialName</Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">Materials.Area</Property>
      </Properties>
    </Element>
    <Element Type="Material" AutoCreated="True" Name="FenderSet" Scope="Public">
      <Properties>
        <Property Name="InitialQuantities">
          <Value>MaterialLots</Value>
          <Rows>
            <Properties>
              <Property Name="InitialQuantitiesInitialQuantity">MaterialLots.Quantity</Property>
              <Property Name="InitialQuantitiesLotID">MaterialLots.LotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ReplenishmentPolicy">
          <Value>None</Value>
        </Property>
        <Property Name="CostPerUnit" Units="USD">Materials.MaterialCost</Property>
        <Property Name="AllowPartialAllocationCondition">True</Property>
        <Property Name="LogMaterialUsage">True</Property>
      </Properties>
    </Element>
    <Element Type="StateStatistic" AutoCreated="True" Name="StateStatistic20" Scope="Public">
      <Properties>
        <Property Name="StateVariableName">
          <Value>Materials.MaterialName.QuantityInStock</Value>
        </Property>
        <Property Name="DataSource">Materials.MaterialName</Property>
        <Property Name="LogObservations">True</Property>
        <Property Name="DisplayCategory">Materials.Area</Property>
      </Properties>
    </Element>
    <Element Type="ConstraintLogic" Name="MaterialConstraints" Scope="Public">
      <Properties>
        <Property Name="Constraints">
          <Value>BillOfMaterials</Value>
          <Rows>
            <Properties>
              <Property Name="MaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="MaterialQuantity">Math.If( ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber, 0.0, Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Consume,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0))</Property>
              <Property Name="MaterialLotID">BillOfMaterials.RequiredLotId</Property>
              <Property Name="ConstraintScope">RequestedItem</Property>
            </Properties>
          </Rows>
        </Property>
      </Properties>
    </Element>
    <Element Type="ConstraintLogic" Name="AssyMaterialConstraints" Scope="Public">
      <Properties>
        <Property Name="Constraints">
          <Value>BillOfMaterials</Value>
          <Rows>
            <Properties>
              <Property Name="MaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="MaterialQuantity">Math.If( ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber, 0.0, Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Consume,  BillOfMaterials.RequiredQuantity, 0.0))</Property>
              <Property Name="MaterialLotID">BillOfMaterials.RequiredLotId</Property>
              <Property Name="ConstraintScope">RequestedItem</Property>
            </Properties>
          </Rows>
        </Property>
      </Properties>
    </Element>
  </Elements>
  <Processes>
    <FileRef Name="Models\Model\Processes\OnRunInitialized.xml" />
    <FileRef Name="Models\Model\Processes\MainFrame_FinishedTask.xml" />
    <FileRef Name="Models\Model\Processes\MainFrame_StartingTask.xml" />
    <FileRef Name="Models\Model\Processes\Input_Stock_Entered.xml" />
  </Processes>
  <Objects>
    <Fixed Name="AssemblyLine" Type="Separator" Location="-28.7820957245748 0 8.22410376171736" YawDeg="90" Size="1.78744789650679 1.62528881457531 0.999999845539787" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@AssemblyLine" Type="BasicNode" Location="-30.2820957245748 0 8.22410376171736" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Separator.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics EditsLocked="True" ExternallyVisible="True" />
        </Node>
        <Node Name="ParentOutput@AssemblyLine" Type="TransferNode" Location="-27.2820957245748 0 7.72410376171736" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporterCondition">False</Property>
          </Properties>
          <Graphics EditsLocked="True" ExternallyVisible="True" />
        </Node>
        <Node Name="MemberOutput@AssemblyLine" Type="TransferNode" Location="-27.2820957245748 0 8.72410376171736" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporterCondition">False</Property>
          </Properties>
          <Graphics EditsLocked="True" ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="1.78744789650679 1.62528881457531 0.999999845539787" YawDeg="90" />
        <IndexedSize Size="1.78744789650679 1.62528881457531 0.999999845539787" YawDeg="90" />
        <IndexedSize Size="1.78744789650679 1.62528881457531 0.999999845539787" YawDeg="90" />
        <IndexedSize Size="1.78744789650679 1.62528881457531 0.999999845539787" YawDeg="90" />
        <IndexedSize Size="1.78744789650679 1.62528881457531 0.999999845539787" YawDeg="90" />
        <IndexedSize Size="1.78744789650679 1.62528881457531 0.999999845539787" YawDeg="90" />
        <IndexedSize Size="1.78744789650679 1.62528881457531 0.999999845539787" YawDeg="90" />
        <IndexedSize Size="1.78744789650679 1.62528881457531 0.999999845539787" YawDeg="90" />
        <IndexedSize Size="1.78744789650679 1.62528881457531 0.999999845539787" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="SeparationMode">Make Copies</Property>
        <Property Name="CopyQuantity">ManufacturingOrders.Quantity</Property>
        <Property Name="NewEntityType">DefaultEntity</Property>
        <Property Name="ImmediatelyTrySeize">True</Property>
        <Property Name="SecondaryResourcesForProcessingOffShiftRule">Finish Work Already Started</Property>
        <Property Name="SecondaryResourcesForProcessingImmediatelyTrySeize">True</Property>
        <Property Name="SecondaryResourcesForProcessingImmediatelyTryAllocateWhenReleased">True</Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ParentOutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="ParentOutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="MemberOutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="MemberOutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics EditsLocked="True" ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Separator.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="27857c74-c0d8-46ee-92a8-1c73b9b78063" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="84266bdf-1092-4140-a0c6-91131b03f626" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="c9c7a75c-ff0f-4b00-9a92-77c832f822b0" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="d8d7f697-0ee1-4c44-b722-7cd47000efa3" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="7f0512d2-bd3e-4b5f-9a45-908ca4259afd" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="318e7a83-f641-4345-a956-bd2a2dbf4ebd" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="7132ef9d-caa6-4b31-9518-e6d763e74850" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="e91819f3-216a-4b36-9d35-8e8518b24a9f" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="0 1 2 3">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True" Locked="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-29.7820957245748 0 8.72410376171736" />
              <Point Location="-32.7820957245748 0 8.72410376171736" />
            </Points>
          </Queue>
          <Queue Queue="ParentOutputBuffer.Contents" ExternallyVisible="True" Locked="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-27.7820957245748 0 8.22410376171736" />
              <Point Location="-24.7820957245748 0 8.22410376171736" />
            </Points>
          </Queue>
          <Queue Queue="MemberOutputBuffer.Contents" ExternallyVisible="True" Locked="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-27.7820957245748 0 9.22410376171736" />
              <Point Location="-24.7820957245748 0 9.22410376171736" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" ExternallyVisible="True" Locked="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-29.7820957245748 0 7.22410376171736" />
              <Point Location="-27.7820957245748 0 7.22410376171736" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="PackAndShip" Type="Combiner" Location="35.2944218834073 0 -3.02383933224379" YawDeg="90" Size="1.79395386611044 1.63120455603299 0.999999935787439" Scope="Public">
      <AssociatedNodes>
        <Node Name="ParentInput@PackAndShip" Type="BasicNode" Location="33.7944218834073 0 -3.52383933224379" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Combiner.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics EditsLocked="True" ExternallyVisible="True" />
        </Node>
        <Node Name="MemberInput@PackAndShip" Type="BasicNode" Location="33.7944218834073 0 -2.52383933224379" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
          </Properties>
          <Graphics EditsLocked="True" ExternallyVisible="True" />
        </Node>
        <Node Name="Output@PackAndShip" Type="TransferNode" Location="36.7944218834073 0 -3.02383933224379" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="DestinationType">Specific</Property>
            <Property Name="DestinationNodeName">Input@Customer</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporterCondition">False</Property>
          </Properties>
          <Graphics EditsLocked="True" ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="1.79395386611044 1.63120455603299 0.999999935787439" YawDeg="90" />
        <IndexedSize Size="1.79395386611044 1.63120455603299 0.999999935787439" YawDeg="90" />
        <IndexedSize Size="1.79395386611044 1.63120455603299 0.999999935787439" YawDeg="90" />
        <IndexedSize Size="1.79395386611044 1.63120455603299 0.999999935787439" YawDeg="90" />
        <IndexedSize Size="1.79395386611044 1.63120455603299 0.999999935787439" YawDeg="90" />
        <IndexedSize Size="1.79395386611044 1.63120455603299 0.999999935787439" YawDeg="90" />
        <IndexedSize Size="1.79395386611044 1.63120455603299 0.999999935787439" YawDeg="90" />
        <IndexedSize Size="1.79395386611044 1.63120455603299 0.999999935787439" YawDeg="90" />
        <IndexedSize Size="1.79395386611044 1.63120455603299 0.999999935787439" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="BatchQuantity">ManufacturingOrders.Quantity</Property>
        <Property Name="MatchingRule">Match Members And Parent</Property>
        <Property Name="MemberMatchExpression">ManufacturingOrders.RowNumber</Property>
        <Property Name="ParentMatchExpression">ManufacturingOrders.RowNumber</Property>
        <Property Name="MustSimultaneouslyBatch">True</Property>
        <Property Name="SuspendBatchingWhenDown">False</Property>
        <Property Name="ImmediatelyTrySeize">True</Property>
        <Property Name="SecondaryResourcesForProcessingOffShiftRule">Finish Work Already Started</Property>
        <Property Name="SecondaryResourcesForProcessingImmediatelyTrySeize">True</Property>
        <Property Name="SecondaryResourcesForProcessingImmediatelyTryAllocateWhenReleased">True</Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="ParentInputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="ParentInputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="MemberInputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="MemberInputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics EditsLocked="True" ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Combiner.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="9dd45fba-02ce-4ac8-950c-734b534a95f3" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="41fc7644-721f-4ff3-83f9-dd43ebda0163" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="36d4c9c9-c386-45c9-a85e-99d9aeea0cc9" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="ec46c372-1d8e-44da-adbd-099a7161773e" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="a81dda54-1399-464c-a5f4-4fbd0ee1a5c4" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="60719ab6-7359-46a8-b949-d59c3aed64de" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="81646937-7a51-4d87-bcf7-e0d6ab82b53d" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="89c4106b-8c40-4378-9473-dd71ac3d8d9a" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="4 5 6 7">
          <Queue Queue="ParentInputBuffer.Contents" ExternallyVisible="True" Locked="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="33 0 -4" />
              <Point Location="20 0 -3.5" />
              <Point Location="20.0541886925741 0 -8.06263719202694" />
              <Point Location="16.0057205212448 0 -8.01714878560751" />
              <Point Location="16.0512089276642 0 1.21699771753676" />
            </Points>
          </Queue>
          <Queue Queue="MemberInputBuffer.Contents" ExternallyVisible="True" Locked="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="34.2944218834073 0 -2.02383933224379" />
              <Point Location="31.2944218834073 0 -2.02383933224379" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True" Locked="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="36.2944218834073 0 -2.52383933224379" />
              <Point Location="39.2944218834073 0 -2.52383933224379" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" ExternallyVisible="True" Locked="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="34.2944218834073 0 -4.02383933224379" />
              <Point Location="36.2944218834073 0 -4.02383933224379" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="Customer" Type="Sink" Location="45.5732134149187 0 -6.02993576791552" YawDeg="90" Size="1.5049811730262 1.02881997857009 1.00000033977415" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@Customer" Type="BasicNode" Location="44.3232134149187 0 -6.02993576791552" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
          </Properties>
          <Graphics EditsLocked="True" ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="AssignmentsOnEntering">
          <Rows>
            <Properties>
              <Property Name="AssignmentsOnEnteringStateVariableName">
                <Value>ManufacturingOrders.ShipDate</Value>
              </Property>
              <Property Name="AssignmentsOnEnteringNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsOnEnteringStateVariableName">
                <Value>ManufacturingOrders.ProductionCost</Value>
              </Property>
              <Property Name="AssignmentsOnEnteringNewValue" Units="Default Currency">Entity.Cost</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics EditsLocked="True" ExternallyVisible="True">
        <SymbolInstances>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="8">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True" Locked="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="44.5732134149187 0 -5.52993576791552" />
              <Point Location="41.5732134149187 0 -5.52993576791552" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="PurchasedMaterials" Type="Source" Location="25.0141942164812 0 -18.4950396876084" YawDeg="90" Size="1.49711911473274 1.02344522701085 0.999999706897704" Scope="Public">
      <AssociatedNodes>
        <Node Name="Output@PurchasedMaterials" Type="TransferNode" Location="26.2641942164812 0 -18.4950396876084" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="DestinationType">Specific</Property>
            <Property Name="DestinationNodeName">Input@Receiving</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporter">Always</Property>
            <Property Name="RideOnTransporterCondition">True</Property>
            <Property Name="TransporterName">ReceivingVehicle</Property>
          </Properties>
          <Graphics EditsLocked="True" ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="EntityType">PurchaseOrder</Property>
        <Property Name="ArrivalMode">Arrival Table</Property>
        <Property Name="ArrivalTimeProperty">PurchaseOrders.ArrivalDate</Property>
        <Property Name="EntitiesPerArrival">PurchaseOrders.Quantity</Property>
        <Property Name="AssignmentsBeforeExiting">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeExitingStateVariableName">
                <Value>ModelEntity.Picture</Value>
              </Property>
              <Property Name="AssignmentsBeforeExitingNewValue">Materials.MaterialColor</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics EditsLocked="True" ExternallyVisible="True">
        <SymbolInstances>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="9">
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True" Locked="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="26.0141942164812 0 -17.9950396876084" />
              <Point Location="29.0141942164812 0 -17.9950396876084" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Transporter Name="StockVehicle" Type="Vehicle" Location="24.2500002897794 0 -11.9460591265896" YawDeg="90" Size="3.89266759614475 2.15285832272613 2.29229998588562" Scope="Public">
      <IndexedSizes>
        <IndexedSize Size="3.89266759614475 2.15285832272613 2.29229998588562" YawDeg="90" />
        <IndexedSize Size="3.89266759614475 2.15285832272613 2.29229998588562" YawDeg="90" />
        <IndexedSize Size="3.89266759614475 2.15285832272613 2.29229998588562" YawDeg="90" />
        <IndexedSize Size="3.89266759614475 2.15285832272613 2.29229998588562" YawDeg="90" />
        <IndexedSize Size="3.89266759614475 2.15285832272613 2.29229998588562" YawDeg="90" />
        <IndexedSize Size="3.89266759614475 2.15285832272613 2.29229998588562" YawDeg="90" />
        <IndexedSize Size="3.89266759614475 2.15285832272613 2.29229998588562" YawDeg="90" />
        <IndexedSize Size="3.89266759614475 2.15285832272613 2.29229998588562" YawDeg="90" />
        <IndexedSize Size="3.89266759614475 2.15285832272613 2.29229998588562" YawDeg="90" />
        <IndexedSize Size="3.89266759614475 2.15285832272613 2.29229998588562" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="LogResourceUsage">True</Property>
        <Property Name="DisplayCategory">Shipping and Receiving</Property>
        <Property Name="CapacityType">WorkSchedule</Property>
        <Property Name="InitialWorkSchedule">Resources.WorkSchedule</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="GanttVisibilityExpression">False</Property>
        <Property Name="InitialRideCapacity">5</Property>
        <Property Name="TransportCostPerRider" Units="USD">0.0</Property>
        <Property Name="TransportCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="TaskSelectionStrategy">Largest Priority</Property>
        <Property Name="MinimumDwellTimeType">Specific Time</Property>
        <Property Name="MinimumDwellTime">Math.Epsilon</Property>
        <Property Name="InitialNode">Output@Stock</Property>
        <Property Name="IdleAction">Park At Home</Property>
        <Property Name="OffShiftAction">Park At Home</Property>
        <Property Name="CapitalCostPerVehicle" Units="USD">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="3e351097-8a38-4e29-a99f-e855069981d0" />
            <Decorations>
              <Decoration SurfacePath="0" SurfaceId="3">
                <MaterialRef Id="e97a5dec-90fe-4b63-a754-ff5db58f346a" />
              </Decoration>
              <Decoration SurfacePath="0" SurfaceId="6">
                <MaterialRef Id="2170afd2-351c-4dbf-941a-d927474f383e" />
              </Decoration>
            </Decorations>
            <FlowDecoration>
              <MaterialRef Id="2170afd2-351c-4dbf-941a-d927474f383e" />
            </FlowDecoration>
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="10">
          <Queue Queue="RideStation.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="27.5 0.27017701856328 -11.875" />
              <Point Location="25.5 0.27017701856328 -11.875" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Transporter>
    <Transporter Name="ReceivingVehicle" Type="Vehicle" Location="38.5307385784296 0 -11.7871727718795" YawDeg="90" Size="3.89266759614475 2.15285832272613 2.29229998588562" Scope="Public">
      <IndexedSizes>
        <IndexedSize Size="3.89266759614475 2.15285832272613 2.29229998588562" YawDeg="90" />
        <IndexedSize Size="3.89266759614475 2.15285832272613 2.29229998588562" YawDeg="90" />
        <IndexedSize Size="3.89266759614475 2.15285832272613 2.29229998588562" YawDeg="90" />
        <IndexedSize Size="3.89266759614475 2.15285832272613 2.29229998588562" YawDeg="90" />
        <IndexedSize Size="3.89266759614475 2.15285832272613 2.29229998588562" YawDeg="90" />
        <IndexedSize Size="3.89266759614475 2.15285832272613 2.29229998588562" YawDeg="90" />
        <IndexedSize Size="3.89266759614475 2.15285832272613 2.29229998588562" YawDeg="90" />
        <IndexedSize Size="3.89266759614475 2.15285832272613 2.29229998588562" YawDeg="90" />
        <IndexedSize Size="3.89266759614475 2.15285832272613 2.29229998588562" YawDeg="90" />
        <IndexedSize Size="3.89266759614475 2.15285832272613 2.29229998588562" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="LogResourceUsage">True</Property>
        <Property Name="DisplayCategory">Shipping and Receiving</Property>
        <Property Name="CapacityType">WorkSchedule</Property>
        <Property Name="InitialWorkSchedule">Resources.WorkSchedule</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="GanttVisibilityExpression">False</Property>
        <Property Name="InitialRideCapacity">5</Property>
        <Property Name="TransportCostPerRider" Units="USD">0.0</Property>
        <Property Name="TransportCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="TaskSelectionStrategy">Largest Priority</Property>
        <Property Name="MinimumDwellTimeType">Specific Time</Property>
        <Property Name="MinimumDwellTime">Math.Epsilon</Property>
        <Property Name="InitialNode">Output@PurchasedMaterials</Property>
        <Property Name="IdleAction">Park At Home</Property>
        <Property Name="OffShiftAction">Park At Home</Property>
        <Property Name="CapitalCostPerVehicle" Units="USD">0.0</Property>
      </Properties>
      <Graphics EditsLocked="True" ExternallyVisible="True">
        <SymbolInstances>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="3e351097-8a38-4e29-a99f-e855069981d0" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="11">
          <Queue Queue="RideStation.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="41.875 0.023010861540369 -11.75" />
              <Point Location="39.875 0.023010861540369 -11.75" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Transporter>
    <Transporter Name="Assemblers1stShift" Type="Worker" Location="-53.968315602504 0 -5.43360344321505" YawDeg="90" Size="0.42696687068803 0.565042752809432 1.79538011550903" Scope="Public">
      <IndexedSizes>
        <IndexedSize Size="0.42696687068803 0.565042752809432 1.79538011550903" YawDeg="90" />
        <IndexedSize Size="0.42696687068803 0.565042752809432 1.79538011550903" YawDeg="90" />
        <IndexedSize Size="0.42696687068803 0.565042752809432 1.79538011550903" YawDeg="90" />
        <IndexedSize Size="0.42696687068803 0.565042752809432 1.79538011550903" YawDeg="90" />
        <IndexedSize Size="0.42696687068803 0.565042752809432 1.79538011550903" YawDeg="90" />
        <IndexedSize Size="0.42696687068803 0.565042752809432 1.79538011550903" YawDeg="90" />
        <IndexedSize Size="0.42696687068803 0.565042752809432 1.79538011550903" YawDeg="90" />
        <IndexedSize Size="0.42696687068803 0.565042752809432 1.79538011550903" YawDeg="90" />
        <IndexedSize Size="0.42696687068803 0.565042752809432 1.79538011550903" YawDeg="90" />
        <IndexedSize Size="0.42696687068803 0.565042752809432 1.79538011550903" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="LogResourceUsage">True</Property>
        <Property Name="DisplayCategory">Assembly Line</Property>
        <Property Name="CapacityType">WorkSchedule</Property>
        <Property Name="InitialWorkSchedule">Resources.WorkSchedule</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="InitialNumberInSystem">Assemblers1stShiftQty</Property>
        <Property Name="InitialTravelMode">Free Space Only</Property>
        <Property Name="TransportCostPerRider" Units="USD">0.0</Property>
        <Property Name="TransportCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="InitialNode">Input@AssemblyLine</Property>
        <Property Name="CapitalCostPerWorker" Units="USD">0.0</Property>
      </Properties>
      <Graphics EditsLocked="True" ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Worker.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="810b0217-7c94-4456-91cf-c9403872d69d" />
            <SymbolLookRef Name="Look12" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="810b0217-7c94-4456-91cf-c9403872d69d" />
            <SymbolLookRef Name="Look12" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="810b0217-7c94-4456-91cf-c9403872d69d" />
            <SymbolLookRef Name="Look12" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="810b0217-7c94-4456-91cf-c9403872d69d" />
            <SymbolLookRef Name="Look12" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="810b0217-7c94-4456-91cf-c9403872d69d" />
            <SymbolLookRef Name="Look12" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="810b0217-7c94-4456-91cf-c9403872d69d" />
            <SymbolLookRef Name="Look12" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="810b0217-7c94-4456-91cf-c9403872d69d" />
            <SymbolLookRef Name="Look12" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="810b0217-7c94-4456-91cf-c9403872d69d" />
            <SymbolLookRef Name="Look12" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="810b0217-7c94-4456-91cf-c9403872d69d" />
            <SymbolLookRef Name="Look12" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="810b0217-7c94-4456-91cf-c9403872d69d" />
            <SymbolLookRef Name="Look12" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="12">
          <Queue Queue="RideStation.Contents" ExternallyVisible="True" Locked="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-53.468315602504 1.10000002384186 -4.93360344321505" />
              <Point Location="-53.468315602504 1.10000002384186 -5.93360344321505" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Transporter>
    <Transporter Name="Operators" Type="Worker" Location="-46.221830333534 0 -5.63095639664253" YawDeg="90" Size="0.428386503125493 0.53783072913644 1.79546940326691" Scope="Public">
      <IndexedSizes>
        <IndexedSize Size="0.428386503125493 0.53783072913644 1.79546940326691" YawDeg="90" />
        <IndexedSize Size="0.428386503125493 0.53783072913644 1.79546940326691" YawDeg="90" />
        <IndexedSize Size="0.428386503125493 0.53783072913644 1.79546940326691" YawDeg="90" />
        <IndexedSize Size="0.428386503125493 0.53783072913644 1.79546940326691" YawDeg="90" />
        <IndexedSize Size="0.428386503125493 0.53783072913644 1.79546940326691" YawDeg="90" />
        <IndexedSize Size="0.428386503125493 0.53783072913644 1.79546940326691" YawDeg="90" />
        <IndexedSize Size="0.428386503125493 0.53783072913644 1.79546940326691" YawDeg="90" />
        <IndexedSize Size="0.428386503125493 0.53783072913644 1.79546940326691" YawDeg="90" />
        <IndexedSize Size="0.428386503125493 0.53783072913644 1.79546940326691" YawDeg="90" />
        <IndexedSize Size="0.428386503125493 0.53783072913644 1.79546940326691" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="LogResourceUsage">True</Property>
        <Property Name="DisplayCategory">Component Manufacturing</Property>
        <Property Name="CapacityType">WorkSchedule</Property>
        <Property Name="InitialWorkSchedule">Resources.WorkSchedule</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="InitialNumberInSystem">OperatorsQty</Property>
        <Property Name="InitialTravelMode">Free Space Only</Property>
        <Property Name="TransportCostPerRider" Units="USD">0.0</Property>
        <Property Name="TransportCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="InitialNode">Output@MFGMaterials</Property>
        <Property Name="CapitalCostPerWorker" Units="USD">0.0</Property>
      </Properties>
      <Graphics EditsLocked="True" ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Worker.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8574ec60-8a0e-47f2-97b7-f6fcd7749fd4" />
            <SymbolLookRef Name="Look13" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8574ec60-8a0e-47f2-97b7-f6fcd7749fd4" />
            <SymbolLookRef Name="Look13" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8574ec60-8a0e-47f2-97b7-f6fcd7749fd4" />
            <SymbolLookRef Name="Look13" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8574ec60-8a0e-47f2-97b7-f6fcd7749fd4" />
            <SymbolLookRef Name="Look13" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8574ec60-8a0e-47f2-97b7-f6fcd7749fd4" />
            <SymbolLookRef Name="Look13" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8574ec60-8a0e-47f2-97b7-f6fcd7749fd4" />
            <SymbolLookRef Name="Look13" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8574ec60-8a0e-47f2-97b7-f6fcd7749fd4" />
            <SymbolLookRef Name="Look13" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8574ec60-8a0e-47f2-97b7-f6fcd7749fd4" />
            <SymbolLookRef Name="Look13" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8574ec60-8a0e-47f2-97b7-f6fcd7749fd4" />
            <SymbolLookRef Name="Look13" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8574ec60-8a0e-47f2-97b7-f6fcd7749fd4" />
            <SymbolLookRef Name="Look13" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="13">
          <Queue Queue="RideStation.Contents" ExternallyVisible="True" Locked="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-45.721830333534 1.10000002384186 -5.13095639664253" />
              <Point Location="-45.721830333534 1.10000002384186 -6.13095639664253" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Transporter>
    <Fixed Name="MFGMaterials" Type="Source" Location="-34.7210226770456 0 2.78670889261551" YawDeg="90" Size="1.49711911473274 1.02344522701085 0.999999706897704" Scope="Public">
      <AssociatedNodes>
        <Node Name="Output@MFGMaterials" Type="TransferNode" Location="-33.4710226770456 0 2.78670889261551" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="DestinationType">BySequence</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporterCondition">False</Property>
          </Properties>
          <Graphics EditsLocked="True" ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="EntityType">MFGOrder</Property>
        <Property Name="ArrivalMode">Arrival Table</Property>
        <Property Name="ArrivalTimeProperty">ManufacturingOrders.AdjustedReleaseDate</Property>
        <Property Name="EntitiesPerArrival">ManufacturingOrders.Enabled</Property>
        <Property Name="AssignmentsBeforeExiting">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeExitingStateVariableName">
                <Value>ModelEntity.Cost</Value>
              </Property>
              <Property Name="AssignmentsBeforeExitingNewValue" Units="USD">Math.If(ManufacturingOrders.OrderStatus == List.OrderStatus.WIP, Math.If( WorkInProcess.AvailableRowCount &gt; 0, WorkInProcess[1].AccruedCost, 0), 0)</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeExitingStateVariableName">
                <Value>ModelEntity.Picture</Value>
              </Property>
              <Property Name="AssignmentsBeforeExitingNewValue">Materials.PictureId</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeExitingStateVariableName">
                <Value>ModelEntity.MaterialRef</Value>
              </Property>
              <Property Name="AssignmentsBeforeExitingNewValue">Materials.MaterialName</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="TableRowReferenceOnCreatedEntityTableName">Routings</Property>
        <Property Name="TableRowReferenceOnCreatedEntityRowNumber">Math.If(ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0, WorkInProcess[1].CurrentRouteNumber / 10 - 1, 0)</Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics EditsLocked="True" ExternallyVisible="True">
        <SymbolInstances>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="25">
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True" Locked="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-33.7210226770456 0 3.28670889261551" />
              <Point Location="-30.7210226770456 0 3.28670889261551" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Entity Name="MFGOrder" Type="ModelEntity" Location="-45.75 4.44089209850063E-16 4.5" YawDeg="90" Size="1.35630798339844 0.681557893753052 0.886286437511444" Scope="Public">
      <IndexedSizes>
        <IndexedSize Size="1.35630798339844 0.681557893753052 0.886286437511444" YawDeg="90" />
        <IndexedSize Size="1.35630798339844 0.681557893753052 0.886286437511444" YawDeg="90" />
        <IndexedSize Size="1.06749999523163 0.148999989032745 0.588675917090827" YawDeg="90" />
        <IndexedSize Size="1.06749999523163 0.148999989032745 0.588675917090827" YawDeg="90" />
        <IndexedSize Size="1.06749999523163 0.148999989032745 0.588675917090827" YawDeg="90" />
        <IndexedSize Size="0.305041637979217 0.151549314544472 1" YawDeg="90" />
        <IndexedSize Size="0.305041637979217 0.151549314544472 1" YawDeg="90" />
        <IndexedSize Size="0.305041637979217 0.151549314544472 1" YawDeg="90" />
        <IndexedSize Size="0.668332040309906 0.140555761754513 0.096028731071221" YawDeg="90" />
        <IndexedSize Size="0.668332040309906 0.140555761754513 0.096028731071221" YawDeg="90" />
        <IndexedSize Size="0.668332040309906 0.140555761754513 0.096028731071221" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DisplayName">Math.If(ModelEntity.InitialQtyFlag == False, ManufacturingOrders.OrderId, Materials.MaterialName)</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="DueDateExpression">ManufacturingOrders.DueDate</Property>
        <Property Name="GanttVisibilityExpression">ModelEntity.InitialQtyFlag == False</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances CurrentAnimationExpression="ModelEntity.Animation" InformationTextExpression="ModelEntity.DisplayName" CurrentSymbolIndex="0" CurrentSymbolExpression="ModelEntity.Picture">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="e4de8f31-1c19-4ea0-b945-b28f062890cd" />
            <Decorations>
              <Decoration SurfacePath="0" SurfaceId="1">
                <MaterialRef Id="a43711b5-e3b5-4144-80a4-bb5bb5f8ff20" />
              </Decoration>
              <Decoration SurfacePath="0" SurfaceId="4">
                <MaterialRef Id="a43711b5-e3b5-4144-80a4-bb5bb5f8ff20" />
              </Decoration>
              <Decoration SurfacePath="0" SurfaceId="10">
                <MaterialRef Id="a43711b5-e3b5-4144-80a4-bb5bb5f8ff20" />
              </Decoration>
            </Decorations>
            <FlowDecoration>
              <MaterialRef Id="a43711b5-e3b5-4144-80a4-bb5bb5f8ff20" />
            </FlowDecoration>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="e4de8f31-1c19-4ea0-b945-b28f062890cd" />
            <Decorations>
              <Decoration SurfacePath="0" SurfaceId="1">
                <MaterialRef Id="960ddc73-36fa-4e4f-bf12-19d2407144b0" />
              </Decoration>
              <Decoration SurfacePath="0" SurfaceId="4">
                <MaterialRef Id="960ddc73-36fa-4e4f-bf12-19d2407144b0" />
              </Decoration>
              <Decoration SurfacePath="0" SurfaceId="10">
                <MaterialRef Id="960ddc73-36fa-4e4f-bf12-19d2407144b0" />
              </Decoration>
            </Decorations>
            <FlowDecoration>
              <MaterialRef Id="960ddc73-36fa-4e4f-bf12-19d2407144b0" />
            </FlowDecoration>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="47c9c9a1-4eac-44ac-812f-b5597486b54a" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="47c9c9a1-4eac-44ac-812f-b5597486b54a" />
            <Decorations>
              <Decoration SurfacePath="0" SurfaceId="0">
                <MaterialRef Id="1d453bdf-76b1-497a-aba5-51ec5a8cdc0c" />
              </Decoration>
            </Decorations>
            <FlowDecoration>
              <MaterialRef Id="1d453bdf-76b1-497a-aba5-51ec5a8cdc0c" />
            </FlowDecoration>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="47c9c9a1-4eac-44ac-812f-b5597486b54a" />
            <Decorations>
              <Decoration SurfacePath="0" SurfaceId="0">
                <MaterialRef Id="cc3ebe7f-6d11-4c28-938a-d60342262568" />
              </Decoration>
            </Decorations>
            <FlowDecoration>
              <MaterialRef Id="cc3ebe7f-6d11-4c28-938a-d60342262568" />
            </FlowDecoration>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b841c75f-2e04-42f0-85fa-6aca3e5555c6" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b841c75f-2e04-42f0-85fa-6aca3e5555c6" />
            <Decorations>
              <Decoration SurfacePath="0" SurfaceId="2">
                <MaterialRef Id="1d453bdf-76b1-497a-aba5-51ec5a8cdc0c" />
              </Decoration>
              <Decoration SurfacePath="0" SurfaceId="1">
                <MaterialRef Id="1d453bdf-76b1-497a-aba5-51ec5a8cdc0c" />
              </Decoration>
              <Decoration SurfacePath="0" SurfaceId="0">
                <MaterialRef Id="1d453bdf-76b1-497a-aba5-51ec5a8cdc0c" />
              </Decoration>
            </Decorations>
            <FlowDecoration>
              <MaterialRef Id="1d453bdf-76b1-497a-aba5-51ec5a8cdc0c" />
            </FlowDecoration>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b841c75f-2e04-42f0-85fa-6aca3e5555c6" />
            <Decorations>
              <Decoration SurfacePath="0" SurfaceId="1">
                <MaterialRef Id="cc3ebe7f-6d11-4c28-938a-d60342262568" />
              </Decoration>
              <Decoration SurfacePath="0" SurfaceId="2">
                <MaterialRef Id="cc3ebe7f-6d11-4c28-938a-d60342262568" />
              </Decoration>
            </Decorations>
            <FlowDecoration>
              <MaterialRef Id="cc3ebe7f-6d11-4c28-938a-d60342262568" />
            </FlowDecoration>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="ec7615f7-7890-408a-a868-e3c2dc505108" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="ec7615f7-7890-408a-a868-e3c2dc505108" />
            <Decorations>
              <Decoration SurfacePath="0" SurfaceId="3">
                <MaterialRef Id="1d453bdf-76b1-497a-aba5-51ec5a8cdc0c" />
              </Decoration>
              <Decoration SurfacePath="0" SurfaceId="2">
                <MaterialRef Id="1d453bdf-76b1-497a-aba5-51ec5a8cdc0c" />
              </Decoration>
              <Decoration SurfacePath="0" SurfaceId="1">
                <MaterialRef Id="1d453bdf-76b1-497a-aba5-51ec5a8cdc0c" />
              </Decoration>
            </Decorations>
            <FlowDecoration>
              <MaterialRef Id="1d453bdf-76b1-497a-aba5-51ec5a8cdc0c" />
            </FlowDecoration>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="ec7615f7-7890-408a-a868-e3c2dc505108" />
            <Decorations>
              <Decoration SurfacePath="0" SurfaceId="1">
                <MaterialRef Id="cc3ebe7f-6d11-4c28-938a-d60342262568" />
              </Decoration>
              <Decoration SurfacePath="0" SurfaceId="3">
                <MaterialRef Id="cc3ebe7f-6d11-4c28-938a-d60342262568" />
              </Decoration>
              <Decoration SurfacePath="0" SurfaceId="2">
                <MaterialRef Id="cc3ebe7f-6d11-4c28-938a-d60342262568" />
              </Decoration>
            </Decorations>
            <FlowDecoration>
              <MaterialRef Id="cc3ebe7f-6d11-4c28-938a-d60342262568" />
            </FlowDecoration>
          </SymbolInstance>
        </SymbolInstances>
      </Graphics>
    </Entity>
    <Transporter Name="Assemblers2ndShift" Type="Worker" Location="-53.968315602504 0 -5.43360344321505" YawDeg="90" Size="0.42696687068803 0.565042752809432 1.79538011550903" Scope="Public">
      <IndexedSizes>
        <IndexedSize Size="0.42696687068803 0.565042752809432 1.79538011550903" YawDeg="90" />
        <IndexedSize Size="0.42696687068803 0.565042752809432 1.79538011550903" YawDeg="90" />
        <IndexedSize Size="0.42696687068803 0.565042752809432 1.79538011550903" YawDeg="90" />
        <IndexedSize Size="0.42696687068803 0.565042752809432 1.79538011550903" YawDeg="90" />
        <IndexedSize Size="0.42696687068803 0.565042752809432 1.79538011550903" YawDeg="90" />
        <IndexedSize Size="0.42696687068803 0.565042752809432 1.79538011550903" YawDeg="90" />
        <IndexedSize Size="0.42696687068803 0.565042752809432 1.79538011550903" YawDeg="90" />
        <IndexedSize Size="0.42696687068803 0.565042752809432 1.79538011550903" YawDeg="90" />
        <IndexedSize Size="0.42696687068803 0.565042752809432 1.79538011550903" YawDeg="90" />
        <IndexedSize Size="0.42696687068803 0.565042752809432 1.79538011550903" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="LogResourceUsage">True</Property>
        <Property Name="DisplayCategory">Assembly Line</Property>
        <Property Name="CapacityType">WorkSchedule</Property>
        <Property Name="InitialWorkSchedule">Resources.WorkSchedule</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="InitialNumberInSystem">Assemblers2ndShiftQty</Property>
        <Property Name="InitialTravelMode">Free Space Only</Property>
        <Property Name="TransportCostPerRider" Units="USD">0.0</Property>
        <Property Name="TransportCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="InitialNode">Input@AssemblyLine</Property>
        <Property Name="CapitalCostPerWorker" Units="USD">0.0</Property>
      </Properties>
      <Graphics EditsLocked="True" ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Worker.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="810b0217-7c94-4456-91cf-c9403872d69d" />
            <SymbolLookRef Name="Look15" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="810b0217-7c94-4456-91cf-c9403872d69d" />
            <SymbolLookRef Name="Look15" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="810b0217-7c94-4456-91cf-c9403872d69d" />
            <SymbolLookRef Name="Look15" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="810b0217-7c94-4456-91cf-c9403872d69d" />
            <SymbolLookRef Name="Look15" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="810b0217-7c94-4456-91cf-c9403872d69d" />
            <SymbolLookRef Name="Look15" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="810b0217-7c94-4456-91cf-c9403872d69d" />
            <SymbolLookRef Name="Look15" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="810b0217-7c94-4456-91cf-c9403872d69d" />
            <SymbolLookRef Name="Look15" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="810b0217-7c94-4456-91cf-c9403872d69d" />
            <SymbolLookRef Name="Look15" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="810b0217-7c94-4456-91cf-c9403872d69d" />
            <SymbolLookRef Name="Look15" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="810b0217-7c94-4456-91cf-c9403872d69d" />
            <SymbolLookRef Name="Look15" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="29">
          <Queue Queue="RideStation.Contents" ExternallyVisible="True" Locked="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-53.468315602504 1.10000002384186 -4.93360344321505" />
              <Point Location="-53.468315602504 1.10000002384186 -5.93360344321505" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Transporter>
    <Fixed Name="MaterialAssembly" Type="Server" Location="-15 0 9.5" YawDeg="90" Size="4.65613746643066 1.20173752307892 5.84993743896484" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@MaterialAssembly" Type="BasicNode" Location="-12.6719310296566 0 9.48000176648403" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics EditsLocked="True" ExternallyVisible="True" />
        </Node>
        <Node Name="Output@MaterialAssembly" Type="TransferNode" Location="-17.3280684960872 0 9.40035646318366" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporterCondition">False</Property>
          </Properties>
          <Graphics EditsLocked="True" ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="4.65613746643066 1.20173752307892 5.84993743896484" YawDeg="90" />
        <IndexedSize Size="4.65613746643066 1.20173752307892 5.84993743896484" YawDeg="90" />
        <IndexedSize Size="4.65613746643066 1.20173752307892 5.84993743896484" YawDeg="90" />
        <IndexedSize Size="4.65613746643066 1.20173752307892 5.84993743896484" YawDeg="90" />
        <IndexedSize Size="4.65613746643066 1.20173752307892 5.84993743896484" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="InitialCapacity">Infinity</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="ProcessingTime" Units="Days">1000</Property>
        <Property Name="ImmediatelyTrySeize">True</Property>
        <Property Name="SecondaryResourcesForProcessingOffShiftRule">Finish Work Already Started</Property>
        <Property Name="SecondaryResourcesForProcessingImmediatelyTrySeize">True</Property>
        <Property Name="SecondaryResourcesForProcessingImmediatelyTryAllocateWhenReleased">True</Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics EditsLocked="True" ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Server.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="c25f54a3-907e-4861-b9d2-745a1f9ddfc7" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="c25f54a3-907e-4861-b9d2-745a1f9ddfc7" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="c25f54a3-907e-4861-b9d2-745a1f9ddfc7" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="c25f54a3-907e-4861-b9d2-745a1f9ddfc7" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="c25f54a3-907e-4861-b9d2-745a1f9ddfc7" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="30 31 32">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True" Locked="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-16.5043464945879 0 10.1008691388186" />
              <Point Location="-19.5043464945879 0 10.1008691388186" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True" Locked="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-13.4956547940905 0 10.1008691388186" />
              <Point Location="-10.4956547940905 0 10.1008691388186" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" ExternallyVisible="True" Locked="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-15.3822894502801 0 8.3127994530261" />
              <Point Location="1.53087106339204 0 8.25102038644214" />
              <Point Location="1.4980982405735 0 6.87456182806359" />
              <Point Location="-2.36909485201385 0 6.80901618242652" />
              <Point Location="-2.43464049765092 0 5.17037504149968" />
              <Point Location="19.2609682082205 0 4.94096528176992" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Entity Name="PurchaseOrder" Type="ModelEntity" Location="-55 1.33226762955019E-15 4" YawDeg="90" Size="0.369369359550508 0.214307343613115 0.349999994039536" Scope="Public">
      <IndexedSizes>
        <IndexedSize Size="0.369369359550508 0.214307343613115 0.349999994039536" YawDeg="90" />
        <IndexedSize Size="1 0.260035456878649 0.105114321367324" YawDeg="90" />
        <IndexedSize Size="1.73906409740448 0.147028714418411 0.659064063777909" YawDeg="90" />
        <IndexedSize Size="0.330459782535742 0.193965522332973 0.300000011920928" YawDeg="90" />
        <IndexedSize Size="0.366357777788361 0.428086295067003 0.300000011920929" YawDeg="90" />
        <IndexedSize Size="0.20882276862314 0.75 0.234375012570276" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DisplayName">Math.If(ModelEntity.InitialQtyFlag == True, "Initial"+Materials.MaterialName.Name, PurchaseOrders.PONumber)</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="GanttVisibilityExpression">False</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances CurrentAnimationExpression="ModelEntity.Animation" InformationTextExpression="ModelEntity.DisplayName" CurrentSymbolIndex="0" CurrentSymbolExpression="ModelEntity.Picture">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="ba29e631-d356-4d8c-a70d-ad0df14a43ce" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="dcbb994c-5dcf-4e08-bd64-6846aaf43fc3" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="fec31d09-849c-4e8f-bc25-513d0fed591f" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="67863df9-f883-4ed9-a78a-b9ca6dedca93" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="abde986b-965e-4c91-82ce-e6e414c4ac9c" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="019021d3-7a61-44d9-b2ab-9fa7310979b3" />
          </SymbolInstance>
        </SymbolInstances>
      </Graphics>
    </Entity>
    <Fixed Name="Cut1" Type="ComponentManufacturingServer" Location="-24.7342230426109 0 -35.7042523365823" YawDeg="90" Size="2.2917149066925 0.745988786220551 1.17339420318604" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@Cut1" Type="BasicNode" Location="-26.2342230426109 0 -35.7042523365823" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="ReportStatistics">False</Property>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
        <Node Name="Output@Cut1" Type="TransferNode" Location="-23.2342230426109 0 -35.7042523365823" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="ReportStatistics">False</Property>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="DestinationType">BySequence</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporterCondition">False</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="ProcessingTasks">
          <Rows>
            <Properties>
              <Property Name="TaskSequenceNumber">10.1</Property>
              <Property Name="TaskName">Consume</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.New || Math.If(WorkInProcess.AvailableRowCount &gt; 0, WorkInProcess[1].CurrentRouteNumber != Routings.RouteNumber, True)</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Consume,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.1</Property>
              <Property Name="TaskName">Setup</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">30.1</Property>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * ManufacturingOrders.Quantity * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">10.2</Property>
              <Property Name="TaskName">SetupWIP</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.2</Property>
              <Property Name="TaskName">ProcessWIP</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * Math.If( ManufacturingOrders.Quantity &gt; WorkInProcess[1].CompletedQuantity, ManufacturingOrders.Quantity - WorkInProcess[1].CompletedQuantity, 0.0) * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">40</Property>
              <Property Name="TaskName">Produce</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Produce,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ImmediatelyTrySeize">True</Property>
        <Property Name="AssignmentsBeforeProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledResource</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Resources.ResourceName.Object.Name</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledStartTime</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledQuantity</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">ManufacturingOrders.Quantity</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Math.If(ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber, Math.If( WorkInProcess[1].FractionOfSetupCompleted &lt;= 1, 1 - WorkInProcess[1].FractionOfSetupCompleted, 1), 1)</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsAfterProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledEndTime</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">1.0</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="SecondaryResourcesForProcessingIsRepeatGroup">False</Property>
        <Property Name="SecondaryResourceForProcessingResourceType">Select From List</Property>
        <Property Name="SecondaryResourceForProcessingResourceName">Resources.SecondaryResourceName</Property>
        <Property Name="SecondaryResourceForProcessingResourceListName">ResourcesSecondaryWorkers.Workers</Property>
        <Property Name="SecondaryResourcesForProcessingOffShiftRule">Finish Work Already Started</Property>
        <Property Name="SecondaryResourcesForProcessingImmediatelyTrySeize">True</Property>
        <Property Name="SecondaryResourcesForProcessingImmediatelyTryAllocateWhenReleased">True</Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Server.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="33 34 35">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-25.7342230426109 0 -35.2042523365823" />
              <Point Location="-28.7342230426109 0 -35.2042523365823" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-23.7342230426109 0 -35.2042523365823" />
              <Point Location="-20.7342230426109 0 -35.2042523365823" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-25.7342230426109 0 -36.7042523365823" />
              <Point Location="-23.7342230426109 0 -36.7042523365823" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="Cut2" Type="ComponentManufacturingServer" Location="-25 0 -30" YawDeg="90" Size="2.2917149066925 0.745988786220551 1.17339420318604" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@Cut2" Type="BasicNode" Location="-26.5 0 -30" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="ReportStatistics">False</Property>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
        <Node Name="Output@Cut2" Type="TransferNode" Location="-23.5 0 -30" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="ReportStatistics">False</Property>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="DestinationType">BySequence</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporterCondition">False</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="ProcessingTasks">
          <Rows>
            <Properties>
              <Property Name="TaskSequenceNumber">10.1</Property>
              <Property Name="TaskName">Consume</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.New || Math.If(WorkInProcess.AvailableRowCount &gt; 0, WorkInProcess[1].CurrentRouteNumber != Routings.RouteNumber, True)</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Consume,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.1</Property>
              <Property Name="TaskName">Setup</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">30.1</Property>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * ManufacturingOrders.Quantity * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">10.2</Property>
              <Property Name="TaskName">SetupWIP</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.2</Property>
              <Property Name="TaskName">ProcessWIP</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * Math.If( ManufacturingOrders.Quantity &gt; WorkInProcess[1].CompletedQuantity, ManufacturingOrders.Quantity - WorkInProcess[1].CompletedQuantity, 0.0) * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">40</Property>
              <Property Name="TaskName">Produce</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Produce,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ImmediatelyTrySeize">True</Property>
        <Property Name="AssignmentsBeforeProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledResource</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Resources.ResourceName.Object.Name</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledStartTime</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledQuantity</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">ManufacturingOrders.Quantity</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Math.If(ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber, Math.If( WorkInProcess[1].FractionOfSetupCompleted &lt;= 1, 1 - WorkInProcess[1].FractionOfSetupCompleted, 1), 1)</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsAfterProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledEndTime</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">1.0</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="SecondaryResourcesForProcessingIsRepeatGroup">False</Property>
        <Property Name="SecondaryResourceForProcessingResourceType">Select From List</Property>
        <Property Name="SecondaryResourceForProcessingResourceName">Resources.SecondaryResourceName</Property>
        <Property Name="SecondaryResourceForProcessingResourceListName">ResourcesSecondaryWorkers.Workers</Property>
        <Property Name="SecondaryResourcesForProcessingOffShiftRule">Finish Work Already Started</Property>
        <Property Name="SecondaryResourcesForProcessingImmediatelyTrySeize">True</Property>
        <Property Name="SecondaryResourcesForProcessingImmediatelyTryAllocateWhenReleased">True</Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Server.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="36 37 38">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-26 0 -29.5" />
              <Point Location="-29 0 -29.5" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-24 0 -29.5" />
              <Point Location="-21 0 -29.5" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-26 0 -31" />
              <Point Location="-24 0 -31" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="Machine1" Type="ComponentManufacturingServer" Location="-24.4280795297999 0 -20.8382440518646" YawDeg="90" Size="3.4099999666214 1.28131258487701 1.70926511287689" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@Machine1" Type="BasicNode" Location="-26.1330795131107 0 -20.8382440518646" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="ReportStatistics">False</Property>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
        <Node Name="Output@Machine1" Type="TransferNode" Location="-22.5 0 -20" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="ReportStatistics">False</Property>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="DestinationType">BySequence</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporterCondition">False</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="3.4099999666214 1.28131258487701 1.70926511287689" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="ProcessingTasks">
          <Rows>
            <Properties>
              <Property Name="TaskSequenceNumber">10.1</Property>
              <Property Name="TaskName">Consume</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.New || Math.If(WorkInProcess.AvailableRowCount &gt; 0, WorkInProcess[1].CurrentRouteNumber != Routings.RouteNumber, True)</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Consume,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.1</Property>
              <Property Name="TaskName">Setup</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">30.1</Property>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * ManufacturingOrders.Quantity * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">10.2</Property>
              <Property Name="TaskName">SetupWIP</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.2</Property>
              <Property Name="TaskName">ProcessWIP</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * Math.If( ManufacturingOrders.Quantity &gt; WorkInProcess[1].CompletedQuantity, ManufacturingOrders.Quantity - WorkInProcess[1].CompletedQuantity, 0.0) * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">40</Property>
              <Property Name="TaskName">Produce</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Produce,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ImmediatelyTrySeize">True</Property>
        <Property Name="AssignmentsBeforeProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledResource</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Resources.ResourceName.Object.Name</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledStartTime</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledQuantity</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">ManufacturingOrders.Quantity</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Math.If(ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber, Math.If( WorkInProcess[1].FractionOfSetupCompleted &lt;= 1, 1 - WorkInProcess[1].FractionOfSetupCompleted, 1), 1)</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsAfterProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledEndTime</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">1.0</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="SecondaryResourcesForProcessingIsRepeatGroup">False</Property>
        <Property Name="SecondaryResourceForProcessingResourceType">Select From List</Property>
        <Property Name="SecondaryResourceForProcessingResourceName">Resources.SecondaryResourceName</Property>
        <Property Name="SecondaryResourceForProcessingResourceListName">ResourcesSecondaryWorkers.Workers</Property>
        <Property Name="SecondaryResourcesForProcessingOffShiftRule">Finish Work Already Started</Property>
        <Property Name="SecondaryResourcesForProcessingImmediatelyTrySeize">True</Property>
        <Property Name="SecondaryResourcesForProcessingImmediatelyTryAllocateWhenReleased">True</Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Server.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="2868d251-4997-4f35-94c4-7bb2af2cfc18" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="39 40 41">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-26.1313609919907 0 -20.1975877594264" />
              <Point Location="-29.1313609919907 0 -20.1975877594264" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-22.7247980676093 0 -20.1975877594264" />
              <Point Location="-19.7247980676093 0 -20.1975877594264" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-25.4280795297999 0 -21.8382440518646" />
              <Point Location="-23.4280795297999 0 -21.8382440518646" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="Machine2" Type="ComponentManufacturingServer" Location="-24.4425713379614 0 -14.0126227498599" YawDeg="90" Size="3.4099999666214 1.28131258487701 1.70926511287689" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@Machine2" Type="BasicNode" Location="-26.1475713212712 0 -14.0126227498599" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="ReportStatistics">False</Property>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
        <Node Name="Output@Machine2" Type="TransferNode" Location="-22.7375713546498 0 -14.0126227498599" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="ReportStatistics">False</Property>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="DestinationType">BySequence</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporterCondition">False</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="3.4099999666214 1.28131258487701 1.70926511287689" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="ProcessingTasks">
          <Rows>
            <Properties>
              <Property Name="TaskSequenceNumber">10.1</Property>
              <Property Name="TaskName">Consume</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.New || Math.If(WorkInProcess.AvailableRowCount &gt; 0, WorkInProcess[1].CurrentRouteNumber != Routings.RouteNumber, True)</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Consume,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.1</Property>
              <Property Name="TaskName">Setup</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">30.1</Property>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * ManufacturingOrders.Quantity * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">10.2</Property>
              <Property Name="TaskName">SetupWIP</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.2</Property>
              <Property Name="TaskName">ProcessWIP</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * Math.If( ManufacturingOrders.Quantity &gt; WorkInProcess[1].CompletedQuantity, ManufacturingOrders.Quantity - WorkInProcess[1].CompletedQuantity, 0.0) * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">40</Property>
              <Property Name="TaskName">Produce</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Produce,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ImmediatelyTrySeize">True</Property>
        <Property Name="AssignmentsBeforeProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledResource</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Resources.ResourceName.Object.Name</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledStartTime</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledQuantity</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">ManufacturingOrders.Quantity</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Math.If(ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber, Math.If( WorkInProcess[1].FractionOfSetupCompleted &lt;= 1, 1 - WorkInProcess[1].FractionOfSetupCompleted, 1), 1)</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsAfterProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledEndTime</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">1.0</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="SecondaryResourcesForProcessingIsRepeatGroup">False</Property>
        <Property Name="SecondaryResourceForProcessingResourceType">Select From List</Property>
        <Property Name="SecondaryResourceForProcessingResourceName">Resources.SecondaryResourceName</Property>
        <Property Name="SecondaryResourceForProcessingResourceListName">ResourcesSecondaryWorkers.Workers</Property>
        <Property Name="SecondaryResourcesForProcessingOffShiftRule">Finish Work Already Started</Property>
        <Property Name="SecondaryResourcesForProcessingImmediatelyTrySeize">True</Property>
        <Property Name="SecondaryResourcesForProcessingImmediatelyTryAllocateWhenReleased">True</Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Server.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="2868d251-4997-4f35-94c4-7bb2af2cfc18" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="42 43 44">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-26.1458528001513 0 -13.3719664574216" />
              <Point Location="-29.1458528001513 0 -13.3719664574216" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-22.7392898757698 0 -13.3719664574216" />
              <Point Location="-19.7392898757698 0 -13.3719664574216" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-25.4425713379614 0 -15.0126227498599" />
              <Point Location="-23.4425713379614 0 -15.0126227498599" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="Paint1" Type="ComponentManufacturingServer" Location="-12.5 0 -7.70092861632991" YawDeg="90" Size="1.82879996299744 1.82879996299744 2.62255001068115" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@Paint1" Type="BasicNode" Location="-14 0 -7.70092861632991" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="ReportStatistics">False</Property>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
        <Node Name="Output@Paint1" Type="TransferNode" Location="-11 0 -7.70092861632991" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="ReportStatistics">False</Property>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="DestinationType">BySequence</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporterCondition">False</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="1.82879996299744 1.82879996299744 2.62255001068115" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="ProcessingTasks">
          <Rows>
            <Properties>
              <Property Name="TaskSequenceNumber">10.1</Property>
              <Property Name="TaskName">Consume</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.New || Math.If(WorkInProcess.AvailableRowCount &gt; 0, WorkInProcess[1].CurrentRouteNumber != Routings.RouteNumber, True)</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Consume,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.1</Property>
              <Property Name="TaskName">Setup</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">30.1</Property>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * ManufacturingOrders.Quantity * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">10.2</Property>
              <Property Name="TaskName">SetupWIP</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.2</Property>
              <Property Name="TaskName">ProcessWIP</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * Math.If( ManufacturingOrders.Quantity &gt; WorkInProcess[1].CompletedQuantity, ManufacturingOrders.Quantity - WorkInProcess[1].CompletedQuantity, 0.0) * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">40</Property>
              <Property Name="TaskName">Produce</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Produce,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ImmediatelyTrySeize">True</Property>
        <Property Name="AssignmentsBeforeProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledResource</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Resources.ResourceName.Object.Name</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledStartTime</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledQuantity</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">ManufacturingOrders.Quantity</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Math.If(ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber, Math.If( WorkInProcess[1].FractionOfSetupCompleted &lt;= 1, 1 - WorkInProcess[1].FractionOfSetupCompleted, 1), 1)</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsAfterProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledEndTime</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">1.0</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="SecondaryResourcesForProcessingIsRepeatGroup">False</Property>
        <Property Name="SecondaryResourceForProcessingResourceType">Select From List</Property>
        <Property Name="SecondaryResourceForProcessingResourceName">Resources.SecondaryResourceName</Property>
        <Property Name="SecondaryResourceForProcessingResourceListName">ResourcesSecondaryWorkers.Workers</Property>
        <Property Name="SecondaryResourcesForProcessingOffShiftRule">Finish Work Already Started</Property>
        <Property Name="SecondaryResourcesForProcessingImmediatelyTrySeize">True</Property>
        <Property Name="SecondaryResourcesForProcessingImmediatelyTryAllocateWhenReleased">True</Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Server.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="f46d4e5b-2120-488a-8244-f95d45d9c551" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="45 46 47">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-13.5 0 -7.20092861632991" />
              <Point Location="-16.5 0 -7.20092861632991" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-11.5 0 -7.20092861632991" />
              <Point Location="-8.5 0 -7.20092861632991" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-13.5 0 -8.70092861632991" />
              <Point Location="-11.5 0 -8.70092861632991" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="Paint2" Type="ComponentManufacturingServer" Location="-12.4355987264004 0 -2.00565027191139" YawDeg="90" Size="1.82879996299744 1.82879996299744 2.62255001068115" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@Paint2" Type="BasicNode" Location="-13.9355987264004 0 -2.00565027191139" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="ReportStatistics">False</Property>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
        <Node Name="Output@Paint2" Type="TransferNode" Location="-10.9355987264004 0 -2.00565027191139" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="ReportStatistics">False</Property>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="DestinationType">BySequence</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporterCondition">False</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="1.82879996299744 1.82879996299744 2.62255001068115" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="ProcessingTasks">
          <Rows>
            <Properties>
              <Property Name="TaskSequenceNumber">10.1</Property>
              <Property Name="TaskName">Consume</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.New || Math.If(WorkInProcess.AvailableRowCount &gt; 0, WorkInProcess[1].CurrentRouteNumber != Routings.RouteNumber, True)</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Consume,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.1</Property>
              <Property Name="TaskName">Setup</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">30.1</Property>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * ManufacturingOrders.Quantity * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">10.2</Property>
              <Property Name="TaskName">SetupWIP</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.2</Property>
              <Property Name="TaskName">ProcessWIP</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * Math.If( ManufacturingOrders.Quantity &gt; WorkInProcess[1].CompletedQuantity, ManufacturingOrders.Quantity - WorkInProcess[1].CompletedQuantity, 0.0) * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">40</Property>
              <Property Name="TaskName">Produce</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Produce,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ImmediatelyTrySeize">True</Property>
        <Property Name="AssignmentsBeforeProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledResource</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Resources.ResourceName.Object.Name</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledStartTime</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledQuantity</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">ManufacturingOrders.Quantity</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Math.If(ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber, Math.If( WorkInProcess[1].FractionOfSetupCompleted &lt;= 1, 1 - WorkInProcess[1].FractionOfSetupCompleted, 1), 1)</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsAfterProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledEndTime</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">1.0</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="SecondaryResourcesForProcessingIsRepeatGroup">False</Property>
        <Property Name="SecondaryResourceForProcessingResourceType">Select From List</Property>
        <Property Name="SecondaryResourceForProcessingResourceName">Resources.SecondaryResourceName</Property>
        <Property Name="SecondaryResourceForProcessingResourceListName">ResourcesSecondaryWorkers.Workers</Property>
        <Property Name="SecondaryResourcesForProcessingOffShiftRule">Finish Work Already Started</Property>
        <Property Name="SecondaryResourcesForProcessingImmediatelyTrySeize">True</Property>
        <Property Name="SecondaryResourcesForProcessingImmediatelyTryAllocateWhenReleased">True</Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Server.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="f46d4e5b-2120-488a-8244-f95d45d9c551" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="48 49 50">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-13.4355987264004 0 -1.50565027191139" />
              <Point Location="-16.4355987264004 0 -1.50565027191139" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-11.4355987264004 0 -1.50565027191139" />
              <Point Location="-8.4355987264004 0 -1.50565027191139" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-13.4355987264004 0 -3.00565027191139" />
              <Point Location="-11.4355987264004 0 -3.00565027191139" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="Shape1" Type="ComponentManufacturingServer" Location="1.25 0 -45" YawDeg="90" Size="1.00081819295883 0.711200028657913 1.40717804431915" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@Shape1" Type="BasicNode" Location="-0.25 0 -45" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="ReportStatistics">False</Property>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
        <Node Name="Output@Shape1" Type="TransferNode" Location="2.75 0 -45" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="ReportStatistics">False</Property>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="DestinationType">BySequence</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporterCondition">False</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="1.00081819295883 0.711200028657913 1.40717804431915" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="ProcessingTasks">
          <Rows>
            <Properties>
              <Property Name="TaskSequenceNumber">10.1</Property>
              <Property Name="TaskName">Consume</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.New || Math.If(WorkInProcess.AvailableRowCount &gt; 0, WorkInProcess[1].CurrentRouteNumber != Routings.RouteNumber, True)</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Consume,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.1</Property>
              <Property Name="TaskName">Setup</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">30.1</Property>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * ManufacturingOrders.Quantity * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">10.2</Property>
              <Property Name="TaskName">SetupWIP</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.2</Property>
              <Property Name="TaskName">ProcessWIP</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * Math.If( ManufacturingOrders.Quantity &gt; WorkInProcess[1].CompletedQuantity, ManufacturingOrders.Quantity - WorkInProcess[1].CompletedQuantity, 0.0) * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">40</Property>
              <Property Name="TaskName">Produce</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Produce,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ImmediatelyTrySeize">True</Property>
        <Property Name="AssignmentsBeforeProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledResource</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Resources.ResourceName.Object.Name</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledStartTime</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledQuantity</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">ManufacturingOrders.Quantity</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Math.If(ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber, Math.If( WorkInProcess[1].FractionOfSetupCompleted &lt;= 1, 1 - WorkInProcess[1].FractionOfSetupCompleted, 1), 1)</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsAfterProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledEndTime</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">1.0</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="SecondaryResourcesForProcessingIsRepeatGroup">False</Property>
        <Property Name="SecondaryResourceForProcessingResourceType">Select From List</Property>
        <Property Name="SecondaryResourceForProcessingResourceName">Resources.SecondaryResourceName</Property>
        <Property Name="SecondaryResourceForProcessingResourceListName">ResourcesSecondaryWorkers.Workers</Property>
        <Property Name="SecondaryResourcesForProcessingOffShiftRule">Finish Work Already Started</Property>
        <Property Name="SecondaryResourcesForProcessingImmediatelyTrySeize">True</Property>
        <Property Name="SecondaryResourcesForProcessingImmediatelyTryAllocateWhenReleased">True</Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Server.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="d4187a76-74f5-477d-a033-522322b7735a" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="51 52 53">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="0.25 0 -44.5" />
              <Point Location="-2.75 0 -44.5" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="2.25 0 -44.5" />
              <Point Location="5.25 0 -44.5" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="0.25 0 -46" />
              <Point Location="2.25 0 -46" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="Shape2" Type="ComponentManufacturingServer" Location="1.26529295876109 0 -38.3746396961531" YawDeg="90" Size="1.00081819295883 0.711200028657913 1.40717804431915" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@Shape2" Type="BasicNode" Location="-0.23470704123891 0 -38.3746396961531" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="ReportStatistics">False</Property>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
        <Node Name="Output@Shape2" Type="TransferNode" Location="2.76529295876109 0 -38.3746396961531" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="ReportStatistics">False</Property>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="DestinationType">BySequence</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporterCondition">False</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="1.00081819295883 0.711200028657913 1.40717804431915" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="ProcessingTasks">
          <Rows>
            <Properties>
              <Property Name="TaskSequenceNumber">10.1</Property>
              <Property Name="TaskName">Consume</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.New || Math.If(WorkInProcess.AvailableRowCount &gt; 0, WorkInProcess[1].CurrentRouteNumber != Routings.RouteNumber, True)</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Consume,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.1</Property>
              <Property Name="TaskName">Setup</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">30.1</Property>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * ManufacturingOrders.Quantity * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">10.2</Property>
              <Property Name="TaskName">SetupWIP</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.2</Property>
              <Property Name="TaskName">ProcessWIP</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * Math.If( ManufacturingOrders.Quantity &gt; WorkInProcess[1].CompletedQuantity, ManufacturingOrders.Quantity - WorkInProcess[1].CompletedQuantity, 0.0) * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">40</Property>
              <Property Name="TaskName">Produce</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Produce,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ImmediatelyTrySeize">True</Property>
        <Property Name="AssignmentsBeforeProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledResource</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Resources.ResourceName.Object.Name</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledStartTime</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledQuantity</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">ManufacturingOrders.Quantity</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Math.If(ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber, Math.If( WorkInProcess[1].FractionOfSetupCompleted &lt;= 1, 1 - WorkInProcess[1].FractionOfSetupCompleted, 1), 1)</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsAfterProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledEndTime</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">1.0</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="SecondaryResourcesForProcessingIsRepeatGroup">False</Property>
        <Property Name="SecondaryResourceForProcessingResourceType">Select From List</Property>
        <Property Name="SecondaryResourceForProcessingResourceName">Resources.SecondaryResourceName</Property>
        <Property Name="SecondaryResourceForProcessingResourceListName">ResourcesSecondaryWorkers.Workers</Property>
        <Property Name="SecondaryResourcesForProcessingOffShiftRule">Finish Work Already Started</Property>
        <Property Name="SecondaryResourcesForProcessingImmediatelyTrySeize">True</Property>
        <Property Name="SecondaryResourcesForProcessingImmediatelyTryAllocateWhenReleased">True</Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Server.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="d4187a76-74f5-477d-a033-522322b7735a" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="54 55 56">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="0.26529295876109 0 -37.8746396961531" />
              <Point Location="-2.73470704123891 0 -37.8746396961531" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="2.26529295876109 0 -37.8746396961531" />
              <Point Location="5.26529295876109 0 -37.8746396961531" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="0.26529295876109 0 -39.3746396961531" />
              <Point Location="2.26529295876109 0 -39.3746396961531" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="Weld1" Type="ComponentManufacturingServer" Location="-0.80575446006893 -5.32907051820075E-15 -20.6273866543723" YawDeg="90" Size="1.05410003662109 0.812799990177155 1.33858001232147" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@Weld1" Type="BasicNode" Location="-2.30575446006893 -5.32907051820075E-15 -20.6273866543723" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="ReportStatistics">False</Property>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
        <Node Name="Output@Weld1" Type="TransferNode" Location="0.69424553993107 -5.32907051820075E-15 -20.6273866543723" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="ReportStatistics">False</Property>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="DestinationType">BySequence</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporterCondition">False</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="1.05410003662109 0.812799990177155 1.33858001232147" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="ProcessingTasks">
          <Rows>
            <Properties>
              <Property Name="TaskSequenceNumber">10.1</Property>
              <Property Name="TaskName">Consume</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.New || Math.If(WorkInProcess.AvailableRowCount &gt; 0, WorkInProcess[1].CurrentRouteNumber != Routings.RouteNumber, True)</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Consume,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.1</Property>
              <Property Name="TaskName">Setup</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">30.1</Property>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * ManufacturingOrders.Quantity * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">10.2</Property>
              <Property Name="TaskName">SetupWIP</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.2</Property>
              <Property Name="TaskName">ProcessWIP</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * Math.If( ManufacturingOrders.Quantity &gt; WorkInProcess[1].CompletedQuantity, ManufacturingOrders.Quantity - WorkInProcess[1].CompletedQuantity, 0.0) * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">40</Property>
              <Property Name="TaskName">Produce</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Produce,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ImmediatelyTrySeize">True</Property>
        <Property Name="AssignmentsBeforeProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledResource</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Resources.ResourceName.Object.Name</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledStartTime</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledQuantity</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">ManufacturingOrders.Quantity</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Math.If(ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber, Math.If( WorkInProcess[1].FractionOfSetupCompleted &lt;= 1, 1 - WorkInProcess[1].FractionOfSetupCompleted, 1), 1)</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsAfterProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledEndTime</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">1.0</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="SecondaryResourcesForProcessingIsRepeatGroup">False</Property>
        <Property Name="SecondaryResourceForProcessingResourceType">Select From List</Property>
        <Property Name="SecondaryResourceForProcessingResourceName">Resources.SecondaryResourceName</Property>
        <Property Name="SecondaryResourceForProcessingResourceListName">ResourcesSecondaryWorkers.Workers</Property>
        <Property Name="SecondaryResourcesForProcessingOffShiftRule">Finish Work Already Started</Property>
        <Property Name="SecondaryResourcesForProcessingImmediatelyTrySeize">True</Property>
        <Property Name="SecondaryResourcesForProcessingImmediatelyTryAllocateWhenReleased">True</Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Server.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="85be0e25-2fce-498d-a086-853198fee2b6" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="57 58 59">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-1.80575446006893 -5.32907051820075E-15 -20.1273866543723" />
              <Point Location="-4.80575446006893 -5.32907051820075E-15 -20.1273866543723" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="0.19424553993107 -5.32907051820075E-15 -20.1273866543723" />
              <Point Location="3.19424553993107 -5.32907051820075E-15 -20.1273866543723" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-1.80575446006893 -5.32907051820075E-15 -21.6273866543723" />
              <Point Location="0.19424553993107 -5.32907051820075E-15 -21.6273866543723" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="Weld2" Type="ComponentManufacturingServer" Location="-0.625 -5.32907051820075E-15 -14.0625" YawDeg="90" Size="1.05410003662109 0.812799990177155 1.33858001232147" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@Weld2" Type="BasicNode" Location="-2.125 -5.32907051820075E-15 -14.0625" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="ReportStatistics">False</Property>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
        <Node Name="Output@Weld2" Type="TransferNode" Location="0.875 -5.32907051820075E-15 -14.0625" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="ReportStatistics">False</Property>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="DestinationType">BySequence</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporterCondition">False</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="1.05410003662109 0.812799990177155 1.33858001232147" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
        <IndexedSize Size="2.2917149066925 0.745988786220551 1.17339420318604" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="ProcessingTasks">
          <Rows>
            <Properties>
              <Property Name="TaskSequenceNumber">10.1</Property>
              <Property Name="TaskName">Consume</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.New || Math.If(WorkInProcess.AvailableRowCount &gt; 0, WorkInProcess[1].CurrentRouteNumber != Routings.RouteNumber, True)</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Consume,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.1</Property>
              <Property Name="TaskName">Setup</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">30.1</Property>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * ManufacturingOrders.Quantity * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">10.2</Property>
              <Property Name="TaskName">SetupWIP</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber</Property>
              <Property Name="TaskProcessType">Sequence Dependent Setup</Property>
              <Property Name="TaskChangeoverLogicName">
                <Value>SequenceDependentSetupMatrix</Value>
              </Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20.2</Property>
              <Property Name="TaskName">ProcessWIP</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * Math.If( ManufacturingOrders.Quantity &gt; WorkInProcess[1].CompletedQuantity, ManufacturingOrders.Quantity - WorkInProcess[1].CompletedQuantity, 0.0) * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">40</Property>
              <Property Name="TaskName">Produce</Property>
              <Property Name="TaskProcessingTime" Units="Hours">Random.Triangular(.1,.2,.3)</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Produce,  BillOfMaterials.RequiredQuantity * ManufacturingOrders.Quantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ImmediatelyTrySeize">True</Property>
        <Property Name="AssignmentsBeforeProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledResource</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Resources.ResourceName.Object.Name</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledStartTime</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledQuantity</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">ManufacturingOrders.Quantity</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Math.If(ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber, Math.If( WorkInProcess[1].FractionOfSetupCompleted &lt;= 1, 1 - WorkInProcess[1].FractionOfSetupCompleted, 1), 1)</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsAfterProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledEndTime</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">1.0</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="SecondaryResourcesForProcessingIsRepeatGroup">False</Property>
        <Property Name="SecondaryResourceForProcessingResourceType">Select From List</Property>
        <Property Name="SecondaryResourceForProcessingResourceName">Resources.SecondaryResourceName</Property>
        <Property Name="SecondaryResourceForProcessingResourceListName">ResourcesSecondaryWorkers.Workers</Property>
        <Property Name="SecondaryResourcesForProcessingOffShiftRule">Finish Work Already Started</Property>
        <Property Name="SecondaryResourcesForProcessingImmediatelyTrySeize">True</Property>
        <Property Name="SecondaryResourcesForProcessingImmediatelyTryAllocateWhenReleased">True</Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Server.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="85be0e25-2fce-498d-a086-853198fee2b6" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="b389d627-bc19-49a9-b24d-d5d2071dbd2b" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="60 61 62">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-1.625 -5.32907051820075E-15 -13.5625" />
              <Point Location="-4.625 -5.32907051820075E-15 -13.5625" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="0.375 -5.32907051820075E-15 -13.5625" />
              <Point Location="3.375 -5.32907051820075E-15 -13.5625" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-1.625 -5.32907051820075E-15 -15.0625" />
              <Point Location="0.375 -5.32907051820075E-15 -15.0625" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="MainFrame1" Type="AssemblyLineServer" Location="-18.75 0 13" YawDeg="90" Size="1.64591997861862 1.23443990945816 2.83321094512939" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@MainFrame1" Type="BasicNode" Location="-20.25 0 13" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
        <Node Name="Output@MainFrame1" Type="TransferNode" Location="-17.25 0 13" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="OutboundLinkRule">By Link Weight</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporterCondition">False</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="ProcessingTasks">
          <Rows>
            <Properties>
              <Property Name="TaskName">Consume</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ModelEntity.Location.Parent == MainFrame1 || ModelEntity.Location.Parent == MainFrame2</Property>
              <Property Name="TaskAutoCancelTrigger">None</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Consume,  BillOfMaterials.RequiredQuantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
              <Property Name="StartingTaskAddOnProcess">
                <Value>MainFrame_StartingTask</Value>
              </Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20</Property>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">Assemblers1stShift.Population.NumberInSystem &lt;= 8</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsResourceType">Select From List</Property>
              <Property Name="TaskResourceRequirementsResourceName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsResourceListName">ResourcesSecondaryWorkers.Workers</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">Server.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="FinishedTaskAddOnProcess">
                <Value>MainFrame_FinishedTask</Value>
              </Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20</Property>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">Assemblers1stShift.Population.NumberInSystem &gt; 8</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.4, .5, .6) * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsResourceType">Select From List</Property>
              <Property Name="TaskResourceRequirementsResourceName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsResourceListName">ResourcesSecondaryWorkers.Workers</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">Server.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsNumberOfResources">2</Property>
              <Property Name="TaskResourceRequirementsMustSimultaneouslySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="FinishedTaskAddOnProcess">
                <Value>MainFrame_FinishedTask</Value>
              </Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">30</Property>
              <Property Name="TaskName">Produce</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ModelEntity.Location.Parent == Test1 || ModelEntity.Location.Parent == Test2</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Produce,  BillOfMaterials.RequiredQuantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsBeforeProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledResource</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Resources.ResourceName.Object.Name</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledStartTime</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledQuantity</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">ManufacturingOrders.Quantity</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Math.If(ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber, Math.If( WorkInProcess[1].FractionOfSetupCompleted &lt;= 1, 1 - WorkInProcess[1].FractionOfSetupCompleted, 1), 1)</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsAfterProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledEndTime</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">1.0</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Server.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="63 64 65">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-19.75 0 13.5" />
              <Point Location="-22.75 0 13.5" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-17.75 0 13.5" />
              <Point Location="-14.75 0 13.5" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-19.75 0 12" />
              <Point Location="-17.75 0 12" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="MainFrame2" Type="AssemblyLineServer" Location="-18.9888264854112 0 16.7021804931601" YawDeg="90" Size="1.64591997861862 1.23443990945816 2.83321094512939" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@MainFrame2" Type="BasicNode" Location="-20.4888264854112 0 16.7021804931601" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
        <Node Name="Output@MainFrame2" Type="TransferNode" Location="-17.4888264854112 0 16.7021804931601" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="OutboundLinkRule">By Link Weight</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporterCondition">False</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="ProcessingTasks">
          <Rows>
            <Properties>
              <Property Name="TaskName">Consume</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ModelEntity.Location.Parent == MainFrame1 || ModelEntity.Location.Parent == MainFrame2</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Consume,  BillOfMaterials.RequiredQuantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
              <Property Name="StartingTaskAddOnProcess">
                <Value>MainFrame_StartingTask</Value>
              </Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20</Property>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">Assemblers1stShift.Population.NumberInSystem &lt;= 8</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsResourceType">Select From List</Property>
              <Property Name="TaskResourceRequirementsResourceName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsResourceListName">ResourcesSecondaryWorkers.Workers</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">Server.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="FinishedTaskAddOnProcess">
                <Value>MainFrame_FinishedTask</Value>
              </Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20</Property>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">Assemblers1stShift.Population.NumberInSystem &gt; 8</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.4, .5, .6) * Routings.ProcessTime</Property>
              <Property Name="TaskResourceRequirementsResourceType">Select From List</Property>
              <Property Name="TaskResourceRequirementsResourceName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsResourceListName">ResourcesSecondaryWorkers.Workers</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">Server.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsNumberOfResources">2</Property>
              <Property Name="TaskResourceRequirementsMustSimultaneouslySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="FinishedTaskAddOnProcess">
                <Value>MainFrame_FinishedTask</Value>
              </Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">30</Property>
              <Property Name="TaskName">Produce</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ModelEntity.Location.Parent == Test1 || ModelEntity.Location.Parent == Test2</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Produce,  BillOfMaterials.RequiredQuantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsBeforeProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledResource</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Resources.ResourceName.Object.Name</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledStartTime</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledQuantity</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">ManufacturingOrders.Quantity</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Math.If(ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber, Math.If( WorkInProcess[1].FractionOfSetupCompleted &lt;= 1, 1 - WorkInProcess[1].FractionOfSetupCompleted, 1), 1)</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsAfterProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledEndTime</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">1.0</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Server.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="66 67 68">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-19.9888264854112 0 17.2021804931601" />
              <Point Location="-22.9888264854112 0 17.2021804931601" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-17.9888264854112 0 17.2021804931601" />
              <Point Location="-14.9888264854112 0 17.2021804931601" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-19.9888264854112 0 15.7021804931601" />
              <Point Location="-17.9888264854112 0 15.7021804931601" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="Power1" Type="AssemblyLineServer" Location="-8.75 0 13.0970886661462" YawDeg="90" Size="1.69213789701462 1.62950521707535 2.42456269264221" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@Power1" Type="BasicNode" Location="-10.25 0 13.0970886661462" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
        <Node Name="Output@Power1" Type="TransferNode" Location="-7.25 0 13.0970886661462" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="OutboundLinkRule">By Link Weight</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporterCondition">False</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="1.69213789701462 1.62950521707535 2.42456269264221" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="ProcessingTasks">
          <Rows>
            <Properties>
              <Property Name="TaskName">Consume</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ModelEntity.Location.Parent == MainFrame1 || ModelEntity.Location.Parent == MainFrame2</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Consume,  BillOfMaterials.RequiredQuantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
              <Property Name="StartingTaskAddOnProcess">
                <Value>MainFrame_StartingTask</Value>
              </Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20</Property>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">Assemblers1stShift.Population.NumberInSystem &lt;= 8</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * Routings.ProcessTime</Property>
              <Property Name="TaskAutoCancelTrigger">None</Property>
              <Property Name="TaskResourceRequirementsResourceType">Select From List</Property>
              <Property Name="TaskResourceRequirementsResourceName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsResourceListName">ResourcesSecondaryWorkers.Workers</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">Server.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="FinishedTaskAddOnProcess">
                <Value>MainFrame_FinishedTask</Value>
              </Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20</Property>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">Assemblers1stShift.Population.NumberInSystem &gt; 8</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.4, .5, .6) * Routings.ProcessTime</Property>
              <Property Name="TaskAutoCancelTrigger">None</Property>
              <Property Name="TaskResourceRequirementsResourceType">Select From List</Property>
              <Property Name="TaskResourceRequirementsResourceName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsResourceListName">ResourcesSecondaryWorkers.Workers</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">Server.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsNumberOfResources">2</Property>
              <Property Name="TaskResourceRequirementsMustSimultaneouslySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="FinishedTaskAddOnProcess">
                <Value>MainFrame_FinishedTask</Value>
              </Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">30</Property>
              <Property Name="TaskName">Produce</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ModelEntity.Location.Parent == Test1 || ModelEntity.Location.Parent == Test2</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Produce,  BillOfMaterials.RequiredQuantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsBeforeProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledResource</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Resources.ResourceName.Object.Name</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledStartTime</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledQuantity</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">ManufacturingOrders.Quantity</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Math.If(ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber, Math.If( WorkInProcess[1].FractionOfSetupCompleted &lt;= 1, 1 - WorkInProcess[1].FractionOfSetupCompleted, 1), 1)</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsAfterProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledEndTime</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">1.0</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Server.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="61db6794-d045-4ba0-a159-4a56d46d605b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="69 70 71">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-9.74999999999997 0 13.5970886661462" />
              <Point Location="-12.75 0 13.5970886661462" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-7.75 0 13.5970886661462" />
              <Point Location="-4.75 0 13.5970886661462" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-9.74999999999997 0 12.0970886661462" />
              <Point Location="-7.75 0 12.0970886661462" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="Power2" Type="AssemblyLineServer" Location="-9.26822091398707 0 16.7913816490565" YawDeg="90" Size="1.69213789701462 1.62950521707535 2.42456269264221" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@Power2" Type="BasicNode" Location="-10.7682209139871 0 16.7913816490565" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
        <Node Name="Output@Power2" Type="TransferNode" Location="-7.76822091398707 0 16.7913816490565" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="OutboundLinkRule">By Link Weight</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporterCondition">False</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="1.69213789701462 1.62950521707535 2.42456269264221" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="ProcessingTasks">
          <Rows>
            <Properties>
              <Property Name="TaskName">Consume</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ModelEntity.Location.Parent == MainFrame1 || ModelEntity.Location.Parent == MainFrame2</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Consume,  BillOfMaterials.RequiredQuantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
              <Property Name="StartingTaskAddOnProcess">
                <Value>MainFrame_StartingTask</Value>
              </Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20</Property>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">Assemblers1stShift.Population.NumberInSystem &lt;= 8</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * Routings.ProcessTime</Property>
              <Property Name="TaskAutoCancelTrigger">None</Property>
              <Property Name="TaskResourceRequirementsResourceType">Select From List</Property>
              <Property Name="TaskResourceRequirementsResourceName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsResourceListName">ResourcesSecondaryWorkers.Workers</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">Server.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="FinishedTaskAddOnProcess">
                <Value>MainFrame_FinishedTask</Value>
              </Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20</Property>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">Assemblers1stShift.Population.NumberInSystem &gt; 8</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.4, .5, .6) * Routings.ProcessTime</Property>
              <Property Name="TaskAutoCancelTrigger">None</Property>
              <Property Name="TaskResourceRequirementsResourceType">Select From List</Property>
              <Property Name="TaskResourceRequirementsResourceName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsResourceListName">ResourcesSecondaryWorkers.Workers</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">Server.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsNumberOfResources">2</Property>
              <Property Name="TaskResourceRequirementsMustSimultaneouslySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="FinishedTaskAddOnProcess">
                <Value>MainFrame_FinishedTask</Value>
              </Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">30</Property>
              <Property Name="TaskName">Produce</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ModelEntity.Location.Parent == Test1 || ModelEntity.Location.Parent == Test2</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Produce,  BillOfMaterials.RequiredQuantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsBeforeProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledResource</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Resources.ResourceName.Object.Name</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledStartTime</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledQuantity</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">ManufacturingOrders.Quantity</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Math.If(ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber, Math.If( WorkInProcess[1].FractionOfSetupCompleted &lt;= 1, 1 - WorkInProcess[1].FractionOfSetupCompleted, 1), 1)</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsAfterProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledEndTime</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">1.0</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Server.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="61db6794-d045-4ba0-a159-4a56d46d605b" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="72 73 74">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-10.2682209139871 0 17.2913816490565" />
              <Point Location="-13.2682209139871 0 17.2913816490565" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-8.26822091398707 0 17.2913816490565" />
              <Point Location="-5.26822091398707 0 17.2913816490565" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-10.2682209139871 0 15.7913816490565" />
              <Point Location="-8.26822091398707 0 15.7913816490565" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="Final1" Type="AssemblyLineServer" Location="0.455223839709118 0 13.0802349908772" YawDeg="90" Size="1.04344534873962 0.818371146917343 1.50283396244049" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@Final1" Type="BasicNode" Location="-1.04477616029088 0 13.0802349908772" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
        <Node Name="Output@Final1" Type="TransferNode" Location="1.95522383970912 0 13.0802349908772" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="OutboundLinkRule">By Link Weight</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporterCondition">False</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="1.04344534873962 0.818371146917343 1.50283396244049" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="ProcessingTasks">
          <Rows>
            <Properties>
              <Property Name="TaskName">Consume</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ModelEntity.Location.Parent == MainFrame1 || ModelEntity.Location.Parent == MainFrame2</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Consume,  BillOfMaterials.RequiredQuantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
              <Property Name="StartingTaskAddOnProcess">
                <Value>MainFrame_StartingTask</Value>
              </Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20</Property>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">Assemblers1stShift.Population.NumberInSystem &lt;= 8</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * Routings.ProcessTime</Property>
              <Property Name="TaskAutoCancelTrigger">None</Property>
              <Property Name="TaskResourceRequirementsResourceType">Select From List</Property>
              <Property Name="TaskResourceRequirementsResourceName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsResourceListName">ResourcesSecondaryWorkers.Workers</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">Server.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="FinishedTaskAddOnProcess">
                <Value>MainFrame_FinishedTask</Value>
              </Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20</Property>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">Assemblers1stShift.Population.NumberInSystem &gt; 8</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.4, .5, .6) * Routings.ProcessTime</Property>
              <Property Name="TaskAutoCancelTrigger">None</Property>
              <Property Name="TaskResourceRequirementsResourceType">Select From List</Property>
              <Property Name="TaskResourceRequirementsResourceName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsResourceListName">ResourcesSecondaryWorkers.Workers</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">Server.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsNumberOfResources">2</Property>
              <Property Name="TaskResourceRequirementsMustSimultaneouslySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="FinishedTaskAddOnProcess">
                <Value>MainFrame_FinishedTask</Value>
              </Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">30</Property>
              <Property Name="TaskName">Produce</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ModelEntity.Location.Parent == Test1 || ModelEntity.Location.Parent == Test2</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Produce,  BillOfMaterials.RequiredQuantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsBeforeProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledResource</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Resources.ResourceName.Object.Name</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledStartTime</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledQuantity</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">ManufacturingOrders.Quantity</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Math.If(ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber, Math.If( WorkInProcess[1].FractionOfSetupCompleted &lt;= 1, 1 - WorkInProcess[1].FractionOfSetupCompleted, 1), 1)</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsAfterProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledEndTime</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">1.0</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Server.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="5c8c1306-f2b6-43df-a571-8db0a0d12153" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="75 76 77">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-0.544776160290882 0 13.5802349908772" />
              <Point Location="-3.54477616029088 0 13.5802349908772" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="1.45522383970912 0 13.5802349908772" />
              <Point Location="4.45522383970912 0 13.5802349908772" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-0.544776160290882 0 12.0802349908772" />
              <Point Location="1.45522383970912 0 12.0802349908772" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="Final2" Type="AssemblyLineServer" Location="0.665621285220085 4.30304130105696E-08 16.8145132181269" YawDeg="90" Size="1.04344534873962 0.818371146917343 1.50283396244049" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@Final2" Type="BasicNode" Location="-0.834378714779915 4.30304130105696E-08 16.8145132181269" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
        <Node Name="Output@Final2" Type="TransferNode" Location="2.16562128522009 4.30304130105696E-08 16.8145132181269" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="OutboundLinkRule">By Link Weight</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporterCondition">False</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="1.04344534873962 0.818371146917343 1.50283396244049" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="ProcessingTasks">
          <Rows>
            <Properties>
              <Property Name="TaskName">Consume</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ModelEntity.Location.Parent == MainFrame1 || ModelEntity.Location.Parent == MainFrame2</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Consume,  BillOfMaterials.RequiredQuantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
              <Property Name="StartingTaskAddOnProcess">
                <Value>MainFrame_StartingTask</Value>
              </Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20</Property>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">Assemblers1stShift.Population.NumberInSystem &lt;= 8</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * Routings.ProcessTime</Property>
              <Property Name="TaskAutoCancelTrigger">None</Property>
              <Property Name="TaskResourceRequirementsResourceType">Select From List</Property>
              <Property Name="TaskResourceRequirementsResourceName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsResourceListName">ResourcesSecondaryWorkers.Workers</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">Server.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="FinishedTaskAddOnProcess">
                <Value>MainFrame_FinishedTask</Value>
              </Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20</Property>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">Assemblers1stShift.Population.NumberInSystem &gt; 8</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.4, .5, .6) * Routings.ProcessTime</Property>
              <Property Name="TaskAutoCancelTrigger">None</Property>
              <Property Name="TaskResourceRequirementsResourceType">Select From List</Property>
              <Property Name="TaskResourceRequirementsResourceName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsResourceListName">ResourcesSecondaryWorkers.Workers</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">Server.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsNumberOfResources">2</Property>
              <Property Name="TaskResourceRequirementsMustSimultaneouslySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="FinishedTaskAddOnProcess">
                <Value>MainFrame_FinishedTask</Value>
              </Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">30</Property>
              <Property Name="TaskName">Produce</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ModelEntity.Location.Parent == Test1 || ModelEntity.Location.Parent == Test2</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Produce,  BillOfMaterials.RequiredQuantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsBeforeProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledResource</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Resources.ResourceName.Object.Name</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledStartTime</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledQuantity</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">ManufacturingOrders.Quantity</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Math.If(ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber, Math.If( WorkInProcess[1].FractionOfSetupCompleted &lt;= 1, 1 - WorkInProcess[1].FractionOfSetupCompleted, 1), 1)</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsAfterProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledEndTime</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">1.0</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Server.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="5c8c1306-f2b6-43df-a571-8db0a0d12153" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="78 79 80">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-0.334378714779915 4.30304130105696E-08 17.3145132181269" />
              <Point Location="-3.33437871477991 4.30304130105696E-08 17.3145132181269" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="1.66562128522009 4.30304130105696E-08 17.3145132181269" />
              <Point Location="4.66562128522008 4.30304130105696E-08 17.3145132181269" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-0.334378714779915 4.30304130105696E-08 15.8145132181269" />
              <Point Location="1.66562128522009 4.30304130105696E-08 15.8145132181269" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="Test1" Type="AssemblyLineServer" Location="9.92420954105911 0 13.136414668171" YawDeg="90" Size="2.43840001751266 1.21920022823975 2.13359999656677" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@Test1" Type="BasicNode" Location="8.42420954105911 0 13.136414668171" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
        <Node Name="Output@Test1" Type="TransferNode" Location="11.4242095410591 0 13.136414668171" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="OutboundLinkRule">By Link Weight</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporterCondition">False</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="2.43840001751266 1.21920022823975 2.13359999656677" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="ProcessingTasks">
          <Rows>
            <Properties>
              <Property Name="TaskName">Consume</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ModelEntity.Location.Parent == MainFrame1 || ModelEntity.Location.Parent == MainFrame2</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Consume,  BillOfMaterials.RequiredQuantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
              <Property Name="StartingTaskAddOnProcess">
                <Value>MainFrame_StartingTask</Value>
              </Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20</Property>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">Assemblers1stShift.Population.NumberInSystem &lt;= 8</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * Routings.ProcessTime</Property>
              <Property Name="TaskAutoCancelTrigger">None</Property>
              <Property Name="TaskResourceRequirementsResourceType">Select From List</Property>
              <Property Name="TaskResourceRequirementsResourceName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsResourceListName">ResourcesSecondaryWorkers.Workers</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">Server.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="FinishedTaskAddOnProcess">
                <Value>MainFrame_FinishedTask</Value>
              </Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20</Property>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">Assemblers1stShift.Population.NumberInSystem &gt; 8</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.4, .5, .6) * Routings.ProcessTime</Property>
              <Property Name="TaskAutoCancelTrigger">None</Property>
              <Property Name="TaskResourceRequirementsResourceType">Select From List</Property>
              <Property Name="TaskResourceRequirementsResourceName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsResourceListName">ResourcesSecondaryWorkers.Workers</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">Server.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsNumberOfResources">2</Property>
              <Property Name="TaskResourceRequirementsMustSimultaneouslySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="FinishedTaskAddOnProcess">
                <Value>MainFrame_FinishedTask</Value>
              </Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">30</Property>
              <Property Name="TaskName">Produce</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ModelEntity.Location.Parent == Test1 || ModelEntity.Location.Parent == Test2</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Produce,  BillOfMaterials.RequiredQuantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsBeforeProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledResource</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Resources.ResourceName.Object.Name</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledStartTime</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledQuantity</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">ManufacturingOrders.Quantity</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Math.If(ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber, Math.If( WorkInProcess[1].FractionOfSetupCompleted &lt;= 1, 1 - WorkInProcess[1].FractionOfSetupCompleted, 1), 1)</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsAfterProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledEndTime</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">1.0</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Server.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="dd30a44a-0815-4255-ba1e-9c11e3e14e84" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="81 82 83">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="8.70500953230294 0 13.6802546699225" />
              <Point Location="5.70500953230294 0 13.6802546699225" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="11.1434095498153 0 13.6802546699225" />
              <Point Location="14.1434095498153 0 13.6802546699225" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="8.92420954105911 0 12.136414668171" />
              <Point Location="10.9242095410591 0 12.136414668171" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="Test2" Type="AssemblyLineServer" Location="9.78002789037339 0 16.8838439817794" YawDeg="90" Size="2.43840001751266 1.21920022823975 2.13359999656677" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@Test2" Type="BasicNode" Location="8.28002789037339 0 16.8838439817794" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
        <Node Name="Output@Test2" Type="TransferNode" Location="11.2800278903734 0 16.8838439817794" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="EntryExemptionCondition">TransferNode.RideOnTransporter &amp;&amp; !Entity.Is.Transporter</Property>
            <Property Name="OutboundLinkRule">By Link Weight</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporterCondition">False</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="2.43840001751266 1.21920022823975 2.13359999656677" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
        <IndexedSize Size="1.64591997861862 1.23443990945816 2.83321094512939" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="ProcessingTasks">
          <Rows>
            <Properties>
              <Property Name="TaskName">Consume</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ModelEntity.Location.Parent == MainFrame1 || ModelEntity.Location.Parent == MainFrame2</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Consume,  BillOfMaterials.RequiredQuantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
              <Property Name="StartingTaskAddOnProcess">
                <Value>MainFrame_StartingTask</Value>
              </Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20</Property>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">Assemblers1stShift.Population.NumberInSystem &lt;= 8</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.8, 1, 1.2) * Routings.ProcessTime</Property>
              <Property Name="TaskAutoCancelTrigger">None</Property>
              <Property Name="TaskResourceRequirementsResourceType">Select From List</Property>
              <Property Name="TaskResourceRequirementsResourceName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsResourceListName">ResourcesSecondaryWorkers.Workers</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">Server.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="FinishedTaskAddOnProcess">
                <Value>MainFrame_FinishedTask</Value>
              </Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">20</Property>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">Assemblers1stShift.Population.NumberInSystem &gt; 8</Property>
              <Property Name="TaskProcessingTime">Random.Triangular(.4, .5, .6) * Routings.ProcessTime</Property>
              <Property Name="TaskAutoCancelTrigger">None</Property>
              <Property Name="TaskResourceRequirementsResourceType">Select From List</Property>
              <Property Name="TaskResourceRequirementsResourceName">Resources.SecondaryResourceName</Property>
              <Property Name="TaskResourceRequirementsResourceListName">ResourcesSecondaryWorkers.Workers</Property>
              <Property Name="TaskResourceRequirementsRequestMove">To Node</Property>
              <Property Name="TaskResourceRequirementsDestinationNode">Server.Input</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsNumberOfResources">2</Property>
              <Property Name="TaskResourceRequirementsMustSimultaneouslySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="FinishedTaskAddOnProcess">
                <Value>MainFrame_FinishedTask</Value>
              </Property>
            </Properties>
            <Properties>
              <Property Name="TaskSequenceNumber">30</Property>
              <Property Name="TaskName">Produce</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ModelEntity.Location.Parent == Test1 || ModelEntity.Location.Parent == Test2</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">BillOfMaterials.MaterialUse</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>BillOfMaterials.ComponentMaterial</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">Math.If( BillOfMaterials.MaterialUse == Enum.MaterialActionType.Produce,  BillOfMaterials.RequiredQuantity, 0.0)</Property>
              <Property Name="TaskMaterialRequirementsLotID">BillOfMaterials.RequiredLotId</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsBeforeProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledResource</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Resources.ResourceName.Object.Name</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledStartTime</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledQuantity</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">ManufacturingOrders.Quantity</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsBeforeProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsBeforeProcessingNewValue">Math.If(ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; WorkInProcess[1].CurrentRouteNumber == Routings.RouteNumber, Math.If( WorkInProcess[1].FractionOfSetupCompleted &lt;= 1, 1 - WorkInProcess[1].FractionOfSetupCompleted, 1), 1)</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="AssignmentsAfterProcessing">
          <Rows>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>ManufacturingOrdersOutput.ScheduledEndTime</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">TimeNow</Property>
            </Properties>
            <Properties>
              <Property Name="AssignmentsAfterProcessingStateVariableName">
                <Value>Resources.ChangeoverEfficiency</Value>
              </Property>
              <Property Name="AssignmentsAfterProcessingNewValue">1.0</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Server.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="dd30a44a-0815-4255-ba1e-9c11e3e14e84" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="8163f5a4-6ef7-4fe1-81fb-a4427977df09" />
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="84 85 86">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="8.56082788161621 0 17.4276839835311" />
              <Point Location="5.56082788161621 0 17.4276839835311" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="10.9992278991303 0 17.4276839835309" />
              <Point Location="13.9992278991303 0 17.4276839835309" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="8.78002789037339 0 15.8838439817794" />
              <Point Location="10.7800278903734 0 15.8838439817794" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="Stock" Type="Server" Location="-2.5 0 -3.75" YawDeg="90" Size="2.08920814597344 0.999103702764571 1.000000367302" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@Stock" Type="BasicNode" Location="-4 0 -3.75" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
            <Property Name="EnteredAddOnProcess">
              <Value>Input_Stock_Entered</Value>
            </Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
        <Node Name="Output@Stock" Type="TransferNode" Location="-1 0 -3.75" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="DestinationType">Specific</Property>
            <Property Name="DestinationNodeName">Input@MaterialAssembly</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporter">Always</Property>
            <Property Name="RideOnTransporterCondition">True</Property>
            <Property Name="TransporterName">StockVehicle</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="InitialCapacity">Infinity</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="ExpectedSetupTimeExpression">SequenceDependentSetupMatrix.ExpectedSetupTime(Server, Entity)</Property>
        <Property Name="ProcessType">Task Sequence</Property>
        <Property Name="ProcessingTasks">
          <Rows>
            <Properties>
              <Property Name="TaskName">Product</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ModelEntity.InitialQtyFlag == False</Property>
              <Property Name="TaskProcessingTime">0</Property>
              <Property Name="TaskAutoCancelTrigger">None</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">Produce</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>Materials.MaterialName</Value>
              </Property>
              <Property Name="TaskMaterialRequirementsQuantity">ManufacturingOrders.Quantity</Property>
            </Properties>
            <Properties>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskProcessingTime" Units="Days">1000</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ImmediatelyTrySeize">True</Property>
        <Property Name="InputBufferCapacity">0</Property>
        <Property Name="SecondaryResourcesForProcessingOffShiftRule">Finish Work Already Started</Property>
        <Property Name="SecondaryResourcesForProcessingImmediatelyTrySeize">True</Property>
        <Property Name="SecondaryResourcesForProcessingImmediatelyTryAllocateWhenReleased">True</Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Server.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="a94ed7e0-7412-4503-93c1-5b7b9ea50c08" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="4b15797c-fc34-4487-968a-df043aec6a39" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="e5bfb6f2-84b5-4830-af64-54e54827b2b6" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="737393f1-a5e6-4724-bb2c-37a8730ee5fc" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="5e1a5fd9-2096-4320-bea9-648187092648" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="9f56b42d-4408-4a83-a06f-51f589fb4ac7" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="37cc31b8-8cde-4ff5-9cbf-d7bd21169499" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="c4b6c89f-03eb-4bf1-8228-9a18dbf26ee1" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="87 88 89">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-3.5 0 -3.25" />
              <Point Location="-6.5 0 -3.25" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-1.5 0 -3.25" />
              <Point Location="1.5 0 -3.25" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="-3.5 0 -4.75" />
              <Point Location="-1.5 0 -4.75" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Fixed Name="Receiving" Type="Server" Location="46 0 -18.5" YawDeg="90" Size="2.08920814597344 0.999103702764571 1.000000367302" Scope="Public">
      <AssociatedNodes>
        <Node Name="Input@Receiving" Type="BasicNode" Location="44.5 0 -18.5" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="SequenceExpectedOperationTime">Math.If(Entity.CanTransferInAndOutOfObjects, Node.AssociatedObject.Server.ProcessingTime, 0.0)</Property>
            <Property Name="EnteredAddOnProcess">
              <Value>Input_Stock_Entered</Value>
            </Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
        <Node Name="Output@Receiving" Type="TransferNode" Location="47.5 0 -18.5" YawDeg="90" Scope="Public" RotationChangesLocation="False">
          <Properties>
            <Property Name="InitialCost" Units="USD">0.0</Property>
            <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
            <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
            <Property Name="DynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="DestinationType">Specific</Property>
            <Property Name="DestinationNodeName">Input@MaterialAssembly</Property>
            <Property Name="RouteRequestDynamicSelectionRule">
              <Value>None</Value>
            </Property>
            <Property Name="RideOnTransporter">Always</Property>
            <Property Name="RideOnTransporterCondition">True</Property>
            <Property Name="TransporterName">StockVehicle</Property>
          </Properties>
          <Graphics ExternallyVisible="True" />
        </Node>
      </AssociatedNodes>
      <IndexedSizes>
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
        <IndexedSize Size="2.08920814597344 0.999103702764571 1.000000367302" YawDeg="90" />
      </IndexedSizes>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">Resources.CostRate</Property>
        <Property Name="InitialCapacity">Infinity</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="ExpectedSetupTimeExpression">SequenceDependentSetupMatrix.ExpectedSetupTime(Server, Entity)</Property>
        <Property Name="ProcessType">Task Sequence</Property>
        <Property Name="ProcessingTasks">
          <Rows>
            <Properties>
              <Property Name="TaskName">Product</Property>
              <Property Name="TaskBranchType">Conditional</Property>
              <Property Name="TaskConditionOrProbability">ModelEntity.InitialQtyFlag == False</Property>
              <Property Name="TaskProcessingTime">0</Property>
              <Property Name="TaskAutoCancelTrigger">None</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
              <Property Name="TaskMaterialRequirementsActionType">Produce</Property>
              <Property Name="TaskMaterialRequirementsMaterialName">
                <Value>Materials.MaterialName</Value>
              </Property>
            </Properties>
            <Properties>
              <Property Name="TaskName">Process</Property>
              <Property Name="TaskProcessingTime" Units="Days">1000</Property>
              <Property Name="TaskResourceRequirementsOffShiftRule">Finish Work Already Started</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTrySeize">True</Property>
              <Property Name="TaskResourceRequirementsImmediatelyTryAllocateWhenReleased">True</Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="ImmediatelyTrySeize">True</Property>
        <Property Name="InputBufferCapacity">0</Property>
        <Property Name="SecondaryResourcesForProcessingOffShiftRule">Finish Work Already Started</Property>
        <Property Name="SecondaryResourcesForProcessingImmediatelyTrySeize">True</Property>
        <Property Name="SecondaryResourcesForProcessingImmediatelyTryAllocateWhenReleased">True</Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
        <Property Name="InputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="InputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="OutputBufferCostPerUse" Units="USD">0.0</Property>
        <Property Name="OutputBufferHoldingCostRate" Units="USD per Hour">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <SymbolInstances CurrentSymbolIndex="0" CurrentSymbolExpression="Server.ResourceState">
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="a94ed7e0-7412-4503-93c1-5b7b9ea50c08" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="4b15797c-fc34-4487-968a-df043aec6a39" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="e5bfb6f2-84b5-4830-af64-54e54827b2b6" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="737393f1-a5e6-4724-bb2c-37a8730ee5fc" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="5e1a5fd9-2096-4320-bea9-648187092648" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="9f56b42d-4408-4a83-a06f-51f589fb4ac7" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="37cc31b8-8cde-4ff5-9cbf-d7bd21169499" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
          <SymbolInstance Center="0 0 0" ExternallyVisible="True">
            <SymbolRef Id="[UseExternalSymbol]" />
            <Decorations>
              <Decoration SurfacePath="0,0" SurfaceId="0">
                <MaterialRef Id="c4b6c89f-03eb-4bf1-8228-9a18dbf26ee1" />
              </Decoration>
            </Decorations>
          </SymbolInstance>
        </SymbolInstances>
        <AttachedObjects IndexList="90 91 92">
          <Queue Queue="InputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="45 0 -18" />
              <Point Location="42 0 -18" />
            </Points>
          </Queue>
          <Queue Queue="OutputBuffer.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="47 0 -18" />
              <Point Location="50 0 -18" />
            </Points>
          </Queue>
          <Queue Queue="Processing.Contents" ExternallyVisible="True" RotationChangesLocation="False" RotationChangesOrientation="False">
            <Points>
              <Point Location="45 0 -19.5" />
              <Point Location="47 0 -19.5" />
            </Points>
          </Queue>
        </AttachedObjects>
      </Graphics>
    </Fixed>
    <Node Name="TransferNode1" Type="TransferNode" Location="18.75 0 15" YawDeg="90" Scope="Public" RotationChangesLocation="False">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="RouteRequestDynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="RideOnTransporterCondition">False</Property>
      </Properties>
      <Graphics ExternallyVisible="True" />
    </Node>
    <Node Name="BasicNode1" Type="BasicNode" Location="32 0 -13" YawDeg="90" Scope="Public" RotationChangesLocation="False">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics ExternallyVisible="True" />
    </Node>
    <Node Name="Cut" Type="ComponentManufacturingTransferNode" Location="-34.82369119104 0 -32.290538835637" YawDeg="90" Scope="Public" RotationChangesLocation="False">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="RouteConstraintLogic">
          <Rows>
            <Properties>
              <Property Name="RouteConstraintLogicName">
                <Value>MaterialConstraints</Value>
              </Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="RouteRequestDynamicSelectionRule">
          <Value>GlobalSelectionRule</Value>
        </Property>
        <Property Name="RideOnTransporterCondition">False</Property>
      </Properties>
      <Graphics ExternallyVisible="True" />
    </Node>
    <Node Name="Shape" Type="ComponentManufacturingTransferNode" Location="-9.99934749299163 0 -31.5746515288688" YawDeg="90" Scope="Public" RotationChangesLocation="False">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="RouteConstraintLogic">
          <Rows>
            <Properties>
              <Property Name="RouteConstraintLogicName">
                <Value>MaterialConstraints</Value>
              </Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="RouteRequestDynamicSelectionRule">
          <Value>GlobalSelectionRule</Value>
        </Property>
        <Property Name="RideOnTransporterCondition">False</Property>
      </Properties>
      <Graphics ExternallyVisible="True" />
    </Node>
    <Node Name="Paint" Type="ComponentManufacturingTransferNode" Location="-21.231366547447 0 -4.10264245326287" YawDeg="90" Scope="Public" RotationChangesLocation="False">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="RouteConstraintLogic">
          <Rows>
            <Properties>
              <Property Name="RouteConstraintLogicName">
                <Value>MaterialConstraints</Value>
              </Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="RouteRequestDynamicSelectionRule">
          <Value>GlobalSelectionRule</Value>
        </Property>
        <Property Name="RideOnTransporterCondition">False</Property>
      </Properties>
      <Graphics ExternallyVisible="True" />
    </Node>
    <Node Name="Weld" Type="ComponentManufacturingTransferNode" Location="-10.5629515985932 0 -16.5462041106128" YawDeg="90" Scope="Public" RotationChangesLocation="False">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="RouteConstraintLogic">
          <Rows>
            <Properties>
              <Property Name="RouteConstraintLogicName">
                <Value>MaterialConstraints</Value>
              </Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="RouteRequestDynamicSelectionRule">
          <Value>GlobalSelectionRule</Value>
        </Property>
        <Property Name="RideOnTransporterCondition">False</Property>
      </Properties>
      <Graphics ExternallyVisible="True" />
    </Node>
    <Node Name="Machine" Type="ComponentManufacturingTransferNode" Location="-35.0175199328446 0 -16.4360476791266" YawDeg="90" Scope="Public" RotationChangesLocation="False">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="RouteConstraintLogic">
          <Rows>
            <Properties>
              <Property Name="RouteConstraintLogicName">
                <Value>MaterialConstraints</Value>
              </Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="RouteRequestDynamicSelectionRule">
          <Value>GlobalSelectionRule</Value>
        </Property>
        <Property Name="RideOnTransporterCondition">False</Property>
      </Properties>
      <Graphics ExternallyVisible="True" />
    </Node>
    <Node Name="AssemblyNode" Type="AssemblyLineTransferNode" Location="-27 0 15" YawDeg="90" Scope="Public" RotationChangesLocation="False">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="RouteConstraintLogic">
          <Rows>
            <Properties>
              <Property Name="RouteConstraintLogicName">
                <Value>AssyMaterialConstraints</Value>
              </Property>
            </Properties>
          </Rows>
        </Property>
        <Property Name="RouteRequestDynamicSelectionRule">
          <Value>GlobalSelectionRule</Value>
        </Property>
        <Property Name="RideOnTransporterCondition">False</Property>
      </Properties>
      <Graphics ExternallyVisible="True" />
    </Node>
    <Link Name="Path1" Type="Path" Size="65.46 0 0" Scope="Public" Start="ParentOutput@AssemblyLine" End="ParentInput@PackAndShip">
      <Points>
        <Point Location="-25.9280795297999 0 4" />
        <Point Location="18.75 0 4" />
      </Points>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="AllowPassing">False</Property>
      </Properties>
      <Graphics ExternallyVisible="True" />
    </Link>
    <Link Name="Conveyor2" Type="Conveyor" Size="3 2 0" Scope="Public" Start="Input@MainFrame1" End="Output@MainFrame1">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <PathDecoratorUsage>
          <PathDecoratorRef Id="6604199d-246c-47b0-b226-6bdb0a677a86" />
          <RepeatUsages />
        </PathDecoratorUsage>
      </Graphics>
    </Link>
    <Link Name="Conveyor10" Type="Conveyor" Size="3 2 0" Scope="Public" Start="Input@MainFrame2" End="Output@MainFrame2">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <PathDecoratorUsage>
          <PathDecoratorRef Id="6604199d-246c-47b0-b226-6bdb0a677a86" />
          <RepeatUsages />
        </PathDecoratorUsage>
      </Graphics>
    </Link>
    <Link Name="Conveyor18" Type="Conveyor" Size="24.96 2 0" Scope="Public" Start="TransferNode1" End="MemberInput@PackAndShip">
      <Points>
        <Point Location="20.5 0 6" />
      </Points>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <PathDecoratorUsage>
          <PathDecoratorRef Id="6604199d-246c-47b0-b226-6bdb0a677a86" />
          <RepeatUsages />
        </PathDecoratorUsage>
      </Graphics>
    </Link>
    <Link Name="Path3" Type="Path" Size="70.6 0 0" Scope="Public" Start="Output@Stock" End="Input@MaterialAssembly">
      <Points>
        <Point Location="26.1981456623609 0 -3.76333223409974" />
        <Point Location="17.8018543376391 0 5.76333223409974" />
      </Points>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="Type">Bidirectional</Property>
      </Properties>
      <Graphics ExternallyVisible="True" />
    </Link>
    <Link Name="Path4" Type="Path" Size="7.94 0 0" Scope="Public" Start="Output@PurchasedMaterials" End="BasicNode1">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="Type">Bidirectional</Property>
      </Properties>
      <Graphics ExternallyVisible="True" />
    </Link>
    <Link Name="Path6" Type="Path" Size="55.56 0 0" Scope="Public" Start="BasicNode1" End="Input@MaterialAssembly">
      <Points>
        <Point Location="24 0 1" />
        <Point Location="12.5952034592628 0 9.40035646318366" />
      </Points>
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="Type">Bidirectional</Property>
      </Properties>
      <Graphics ExternallyVisible="True" />
    </Link>
    <Link Name="Conveyor3" Type="Conveyor" Size="7 2 0" Scope="Public" Start="Output@MainFrame1" End="Input@Power1">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="SelectionWeight">2</Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <PathDecoratorUsage>
          <PathDecoratorRef Id="6604199d-246c-47b0-b226-6bdb0a677a86" />
          <RepeatUsages />
        </PathDecoratorUsage>
      </Graphics>
    </Link>
    <Link Name="Conveyor4" Type="Conveyor" Size="6.21 2 0" Scope="Public" Start="Output@Power1" End="Input@Final1">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="SelectionWeight">2</Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <PathDecoratorUsage>
          <PathDecoratorRef Id="6604199d-246c-47b0-b226-6bdb0a677a86" />
          <RepeatUsages />
        </PathDecoratorUsage>
      </Graphics>
    </Link>
    <Link Name="Conveyor5" Type="Conveyor" Size="3 2 0" Scope="Public" Start="Input@Power1" End="Output@Power1">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <PathDecoratorUsage>
          <PathDecoratorRef Id="6604199d-246c-47b0-b226-6bdb0a677a86" />
          <RepeatUsages />
        </PathDecoratorUsage>
      </Graphics>
    </Link>
    <Link Name="Conveyor6" Type="Conveyor" Size="3 2 0" Scope="Public" Start="Input@Final1" End="Output@Final1">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <PathDecoratorUsage>
          <PathDecoratorRef Id="6604199d-246c-47b0-b226-6bdb0a677a86" />
          <RepeatUsages />
        </PathDecoratorUsage>
      </Graphics>
    </Link>
    <Link Name="Conveyor7" Type="Conveyor" Size="6.47 2 0" Scope="Public" Start="Output@Final1" End="Input@Test1">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="SelectionWeight">2</Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <PathDecoratorUsage>
          <PathDecoratorRef Id="6604199d-246c-47b0-b226-6bdb0a677a86" />
          <RepeatUsages />
        </PathDecoratorUsage>
      </Graphics>
    </Link>
    <Link Name="Conveyor8" Type="Conveyor" Size="3 2 0" Scope="Public" Start="Input@Test1" End="Output@Test1">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <PathDecoratorUsage>
          <PathDecoratorRef Id="6604199d-246c-47b0-b226-6bdb0a677a86" />
          <RepeatUsages />
        </PathDecoratorUsage>
      </Graphics>
    </Link>
    <Link Name="Conveyor11" Type="Conveyor" Size="7.56 2 0" Scope="Public" Start="Output@Test1" End="TransferNode1">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="SelectionWeight">2</Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <PathDecoratorUsage>
          <PathDecoratorRef Id="6604199d-246c-47b0-b226-6bdb0a677a86" />
          <RepeatUsages />
        </PathDecoratorUsage>
      </Graphics>
    </Link>
    <Link Name="Conveyor12" Type="Conveyor" Size="6.72 2 0" Scope="Public" Start="Output@MainFrame2" End="Input@Power2">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="SelectionWeight">2</Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <PathDecoratorUsage>
          <PathDecoratorRef Id="6604199d-246c-47b0-b226-6bdb0a677a86" />
          <RepeatUsages />
        </PathDecoratorUsage>
      </Graphics>
    </Link>
    <Link Name="Conveyor13" Type="Conveyor" Size="3 2 0" Scope="Public" Start="Input@Power2" End="Output@Power2">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <PathDecoratorUsage>
          <PathDecoratorRef Id="6604199d-246c-47b0-b226-6bdb0a677a86" />
          <RepeatUsages />
        </PathDecoratorUsage>
      </Graphics>
    </Link>
    <Link Name="Conveyor14" Type="Conveyor" Size="6.93 2 0" Scope="Public" Start="Output@Power2" End="Input@Final2">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="SelectionWeight">2</Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <PathDecoratorUsage>
          <PathDecoratorRef Id="6604199d-246c-47b0-b226-6bdb0a677a86" />
          <RepeatUsages />
        </PathDecoratorUsage>
      </Graphics>
    </Link>
    <Link Name="Conveyor15" Type="Conveyor" Size="3 2 0" Scope="Public" Start="Input@Final2" End="Output@Final2">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <PathDecoratorUsage>
          <PathDecoratorRef Id="6604199d-246c-47b0-b226-6bdb0a677a86" />
          <RepeatUsages />
        </PathDecoratorUsage>
      </Graphics>
    </Link>
    <Link Name="Conveyor16" Type="Conveyor" Size="6.11 2 0" Scope="Public" Start="Output@Final2" End="Input@Test2">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="SelectionWeight">2</Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <PathDecoratorUsage>
          <PathDecoratorRef Id="6604199d-246c-47b0-b226-6bdb0a677a86" />
          <RepeatUsages />
        </PathDecoratorUsage>
      </Graphics>
    </Link>
    <Link Name="Conveyor17" Type="Conveyor" Size="3 2 0" Scope="Public" Start="Input@Test2" End="Output@Test2">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <PathDecoratorUsage>
          <PathDecoratorRef Id="6604199d-246c-47b0-b226-6bdb0a677a86" />
          <RepeatUsages />
        </PathDecoratorUsage>
      </Graphics>
    </Link>
    <Link Name="Conveyor19" Type="Conveyor" Size="7.7 2 0" Scope="Public" Start="Output@Test2" End="TransferNode1">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="SelectionWeight">2</Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <PathDecoratorUsage>
          <PathDecoratorRef Id="6604199d-246c-47b0-b226-6bdb0a677a86" />
          <RepeatUsages />
        </PathDecoratorUsage>
      </Graphics>
    </Link>
    <Link Name="Path2" Type="Path" Size="6.28 0 0" Scope="Public" Start="MemberOutput@AssemblyLine" End="AssemblyNode">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
      </Properties>
      <Graphics ExternallyVisible="True" />
    </Link>
    <Link Name="Conveyor1" Type="Conveyor" Size="7.04 2 0" Scope="Public" Start="AssemblyNode" End="Input@MainFrame1">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <PathDecoratorUsage>
          <PathDecoratorRef Id="6604199d-246c-47b0-b226-6bdb0a677a86" />
          <RepeatUsages />
        </PathDecoratorUsage>
      </Graphics>
    </Link>
    <Link Name="Conveyor9" Type="Conveyor" Size="6.73 2 0" Scope="Public" Start="AssemblyNode" End="Input@MainFrame2">
      <Properties>
        <Property Name="InitialCost" Units="USD">0.0</Property>
        <Property Name="InitialCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceIdleCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="ResourceCostPerUse" Units="USD">0.0</Property>
        <Property Name="ResourceUsageCostRate" Units="USD per Hour">0.0</Property>
        <Property Name="DynamicSelectionRule">
          <Value>None</Value>
        </Property>
        <Property Name="CapitalCost" Units="USD">0.0</Property>
      </Properties>
      <Graphics ExternallyVisible="True">
        <PathDecoratorUsage>
          <PathDecoratorRef Id="6604199d-246c-47b0-b226-6bdb0a677a86" />
          <RepeatUsages />
        </PathDecoratorUsage>
      </Graphics>
    </Link>
  </Objects>
  <Tokens>
    <Token Name="CheckToken">
      <States>
        <StringState Name="RoutingNumber" />
        <ElementReferenceState Name="CurrentEntity" ElementType="Entity" />
        <IntegerState Name="NumberOfRows" />
        <ElementReferenceState Name="Resource" ElementType="Object" />
        <StringState Name="OrderId" />
        <DiscreteState Name="EventDelayTime" InitialValueUnits="Hours" UnitType="Time" />
        <ElementReferenceState Name="StartingTransferNode" ElementType="Object" />
        <IntegerState Name="CurrentLevel" />
        <DiscreteState Name="ReserveStartTime" InitialValueUnits="Hours" UnitType="Time" />
        <DiscreteState Name="ReserveEndTime" InitialValueUnits="Hours" UnitType="Time" />
        <StringState Name="RoutingKey" />
        <DiscreteState Name="AverageAvailability" />
        <ElementReferenceState Name="TransferNode" ElementType="Object" />
        <IntegerState Name="ReasonCode" />
        <StringState Name="StartingRoutingKey" />
        <BooleanState Name="IsPrimary" />
        <DiscreteState Name="EventTime" InitialValueUnits="Hours" UnitType="Time" />
        <DiscreteState Name="TimeOfNextValue" InitialValueUnits="Hours" UnitType="Time" />
        <DiscreteState Name="NextValue" />
        <DiscreteState Name="UpstreamProcessingTime" InitialValueUnits="Hours" UnitType="Time" />
        <DiscreteState Name="CurrentSequenceProcessingTime" InitialValueUnits="Hours" UnitType="Time" />
        <StringState Name="SuccessorRoutingNumber" />
        <ElementReferenceState Name="MaterialName" ElementType="Material" />
      </States>
    </Token>
    <Token Name="TaskToken">
      <States>
        <ElementReferenceState Name="MaterialRef" ElementType="Material" />
        <IntegerState Name="NumberFound" />
      </States>
    </Token>
  </Tokens>
  <TableStatesDbStore>
    <FileRef Name="Results\Model\TableStates.sqlite" />
  </TableStatesDbStore>
  <Tables>
    <Table Name="Resources">
      <Schema>
        <PropertyDefinitions>
          <ObjectInstanceProperty Name="ResourceName" DefaultValue="null" NullString="null" ObjectTypeName="ObjectType" DefaultValueInstantiation="AutoCreateInstance" LocationType="Cartesian" InitialOffsetX="XLocation" InitialOffsetZ="ZLocation" />
          <StringProperty Name="Description" NullString="null" />
          <RealProperty Name="XLocation" DefaultValue="0" NullString="null" UnitType="Length" />
          <RealProperty Name="ZLocation" DefaultValue="0" NullString="null" UnitType="Length" />
          <StringProperty Name="Area" NullString="null" />
          <StringProperty Name="Workcell" NullString="null" />
          <ObjectTypeProperty Name="ObjectType" NullString="null" />
          <ScheduleProperty Name="WorkSchedule" DefaultValue="AllTheTime" Required="False" NullString="null" />
          <RealProperty Name="CostRate" DefaultValue="0" NullString="null" UnitType="CurrencyPerTimeUnit" />
          <ChangeoverMatrixProperty Name="ChangeoverMatrix" Required="False" NullString="null" />
          <ObjectInstanceProperty Name="SecondaryResourceName" Required="False" NullString="null" LocationType="Cartesian" />
          <Overrides />
        </PropertyDefinitions>
        <AutoRows>
          <AutoRow Column="ResourceName" />
        </AutoRows>
        <States>
          <DiscreteState Name="ChangeoverEfficiency" InitialValue="1" />
        </States>
        <Keys>
          <Key Column="ResourceName" />
        </Keys>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="ResourceName" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Description" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="XLocation" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="ZLocation" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Area" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Workcell" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="WorkSchedule" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="CostRate" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="ChangeoverMatrix" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="SecondaryResourceName" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\Model\TableData\Resources.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="Materials">
      <Schema>
        <PropertyDefinitions>
          <ElementProperty Name="MaterialName" DefaultValue="null" NullString="null" Type="Material" ReferenceType="Create">
            <AutoCreateInitialValues>
              <AutoCreateInitialValue Name="InitialQuantities" Value="MaterialLots" />
              <AutoCreateInitialValue Name="CostPerUnit" Value="Materials.MaterialCost" />
              <AutoCreateInitialValue Name="LogMaterialUsage" Value="True" />
              <AutoCreateInitialValue Name="InitialQuantities.InitialQuantitiesInitialQuantity" Value="MaterialLots.Quantity" />
              <AutoCreateInitialValue Name="InitialQuantities.InitialQuantitiesLotID" Value="MaterialLots.LotId" />
            </AutoCreateInitialValues>
          </ElementProperty>
          <StringProperty Name="MaterialClass" NullString="null" />
          <RealProperty Name="MaterialCost" DefaultValue="0" NullString="null" UnitType="Currency" />
          <ListProperty Name="MaterialColor" DefaultValue="Other" NullString="null" List="MaterialColor" />
          <ColorProperty Name="GanttColor" DefaultValue="Gray" NullString="null" />
          <ElementProperty Name="MaterialStateStatistic" Required="False" NullString="null" Type="StateStatistic" ReferenceType="Create">
            <AutoCreateInitialValues>
              <AutoCreateInitialValue Name="StateVariableName" Value="Materials.MaterialName.QuantityInStock" />
              <AutoCreateInitialValue Name="DataSource" Value="Materials.MaterialName" />
              <AutoCreateInitialValue Name="DisplayCategory" Value="Materials.Area" />
              <AutoCreateInitialValue Name="LogObservations" Value="True" />
            </AutoCreateInitialValues>
          </ElementProperty>
          <IntegerProperty Name="PictureId" DefaultValue="0" NullString="null" />
          <Overrides />
        </PropertyDefinitions>
        <AutoRows>
          <AutoRow Column="MaterialName" />
          <AutoRow Column="MaterialStateStatistic" />
        </AutoRows>
        <Keys>
          <Key Column="MaterialName" />
        </Keys>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="MaterialName" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="MaterialClass" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="MaterialCost" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="MaterialColor" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="GanttColor" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="MaterialStateStatistic" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="PictureId" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\Model\TableData\Materials.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="MaterialLots">
      <Schema>
        <PropertyDefinitions>
          <ForeignKeyProperty Name="MaterialName" NullString="null" TableKey="Materials.MaterialName" />
          <StringProperty Name="LotId" NullString="null" />
          <RealProperty Name="Quantity" DefaultValue="0" NullString="null" />
          <Overrides />
        </PropertyDefinitions>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="MaterialName" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="LotId" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Quantity" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\Model\TableData\MaterialLots.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="ManufacturingOrders">
      <Schema>
        <PropertyDefinitions>
          <BooleanProperty Name="Enabled" DefaultValue="True" NullString="null" />
          <StringProperty Name="OrderId" NullString="null" />
          <StringProperty Name="Customer" NullString="null" />
          <ForeignKeyProperty Name="MaterialName" NullString="null" TableKey="Materials.MaterialName" />
          <DateTimeProperty Name="ReleaseDate" DefaultValue="8/24/2017 12:00:00 AM" NullString="null" UnitType="Time" />
          <DateTimeProperty Name="DueDate" DefaultValue="8/24/2017 12:00:00 AM" NullString="null" UnitType="Time" />
          <ListProperty Name="OrderStatus" DefaultValue="New" NullString="null" List="OrderStatus" />
          <IntegerProperty Name="Priority" DefaultValue="0" NullString="null" />
          <RealProperty Name="Quantity" DefaultValue="0" NullString="null" />
          <ExpressionProperty Name="AdjustedReleaseDate" DefaultValue="Math.Max(ManufacturingOrders.ReleaseDate, 0.0)" NullString="null" />
          <Overrides />
        </PropertyDefinitions>
        <States>
          <DateTimeState Name="ShipDate" />
          <DiscreteState Name="ProductionCost" InitialValueUnits="Default Currency" UnitType="Currency" />
          <IntegerState Name="RowNumber" />
        </States>
        <Keys>
          <Key Column="OrderId" />
        </Keys>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="Enabled" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="OrderId" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Customer" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="MaterialName" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="ReleaseDate" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="DueDate" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="OrderStatus" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Priority" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Quantity" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="AdjustedReleaseDate" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
        <Targets>
          <Target Name="TargetShipDate" DataFormat="DateTime" UnitType="Unspecified" WithinBoundsStatus="OnTime" AboveBoundsStatus="Late" NoValueStatus="Incomplete">
            <Expression>ManufacturingOrders.ShipDate</Expression>
            <UpperBound>ManufacturingOrders.DueDate</UpperBound>
          </Target>
          <Target Name="TargetCost" DataFormat="Real" UnitType="Currency" WithinBoundsStatus="OnBudget" AboveBoundsStatus="Overrun" NoValueStatus="Incomplete">
            <Expression Units="USD">ManufacturingOrders.ProductionCost</Expression>
            <UpperBound Units="USD">100000</UpperBound>
          </Target>
        </Targets>
      </Schema>
      <Rows>
        <FileRef Name="Models\Model\TableData\ManufacturingOrders.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="Routings">
      <Schema>
        <PropertyDefinitions>
          <StringProperty Name="RoutingKey" NullString="null" />
          <ForeignKeyProperty Name="MaterialName" NullString="null" TableKey="Materials.MaterialName" />
          <SequenceDestinationProperty Name="Sequence" DefaultValue="null" NullString="null" AcceptsAnyNode="False" />
          <IntegerProperty Name="RouteNumber" DefaultValue="10" NullString="null" />
          <RealProperty Name="SetupTime" DefaultValue="0" NullString="null" UnitType="Time" DefaultUnits="Minutes" />
          <RealProperty Name="ProcessTime" DefaultValue="0" NullString="null" UnitType="Time" DefaultUnits="Minutes" />
          <Overrides />
        </PropertyDefinitions>
        <Keys>
          <Key Column="RoutingKey" />
        </Keys>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="RoutingKey" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="MaterialName" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Sequence" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="RouteNumber" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="SetupTime" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="ProcessTime" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\Model\TableData\Routings.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="BillOfMaterials">
      <Schema>
        <PropertyDefinitions>
          <ForeignKeyProperty Name="RoutingKey" NullString="null" TableKey="Routings.RoutingKey" />
          <ElementProperty Name="ComponentMaterial" DefaultValue="null" NullString="null" Type="Material" />
          <RealProperty Name="RequiredQuantity" DefaultValue="0" NullString="null" />
          <StringProperty Name="RequiredLotId" NullString="null" />
          <EnumProperty Name="MaterialUse" DefaultValue="Consume" NullString="null" EnumType="MaterialActionType" />
          <Overrides />
        </PropertyDefinitions>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="RoutingKey" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="ComponentMaterial" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="RequiredQuantity" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="RequiredLotId" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="MaterialUse" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\Model\TableData\BillOfMaterials.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="WorkInProcess">
      <Schema>
        <PropertyDefinitions>
          <ForeignKeyProperty Name="OrderId" NullString="null" TableKey="ManufacturingOrders.OrderId" />
          <IntegerProperty Name="CurrentRouteNumber" DefaultValue="10" NullString="null" />
          <ObjectInstanceProperty Name="CurrentResource" NullString="null" FilterMode="Resources" LocationType="Cartesian" />
          <RealProperty Name="FractionOfSetupCompleted" DefaultValue="0" NullString="null" />
          <RealProperty Name="CompletedQuantity" DefaultValue="0" NullString="null" />
          <RealProperty Name="AccruedCost" DefaultValue="0" NullString="null" UnitType="Currency" />
          <Overrides />
        </PropertyDefinitions>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="OrderId" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="CurrentRouteNumber" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="CurrentResource" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="FractionOfSetupCompleted" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="CompletedQuantity" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="AccruedCost" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\Model\TableData\WorkInProcess.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="ManufacturingOrdersOutput" OutputOnly="True">
      <Schema>
        <States>
          <ForeignKeyState Name="OrderId" ReadOnly="True" TableKey="ManufacturingOrders.OrderId" />
          <ForeignKeyState Name="RoutingKey" ReadOnly="True" TableKey="Routings.RoutingKey" />
          <StringState Name="ScheduledResource" />
          <DateTimeState Name="ScheduledStartTime" />
          <DateTimeState Name="ScheduledEndTime" />
          <DiscreteState Name="ScheduledQuantity" />
        </States>
      </Schema>
      <Rows>
        <FileRef Name="Models\Model\TableData\ManufacturingOrdersOutput.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="PurchaseOrders">
      <Schema>
        <PropertyDefinitions>
          <StringProperty Name="PONumber" NullString="null" />
          <ForeignKeyProperty Name="MaterialName" NullString="null" TableKey="Materials.MaterialName" />
          <DateTimeProperty Name="ArrivalDate" DisplayName="Arrival Date" DefaultValue="1/1/2008" NullString="null" UnitType="Time" />
          <RealProperty Name="Quantity" DefaultValue="0.0" NullString="null" />
          <Overrides />
        </PropertyDefinitions>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="PONumber" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="MaterialName" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="ArrivalDate" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Quantity" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\Model\TableData\PurchaseOrders.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="ResourcesSecondaryWorkers">
      <Schema>
        <PropertyDefinitions>
          <ForeignKeyProperty Name="Resource" NullString="null" TableKey="Resources.ResourceName" />
          <DynamicObjectInstanceProperty Name="Workers" DefaultValue="null" NullString="null" ValidObjectType="Agent" LocationType="Cartesian" />
          <Overrides />
        </PropertyDefinitions>
        <ExtendedAttributeSets>
          <ExtendedAttributeSet Name="Resource" OperationalPlanningEditable="True" />
          <ExtendedAttributeSet Name="Workers" OperationalPlanningEditable="True" />
        </ExtendedAttributeSets>
      </Schema>
      <Rows>
        <FileRef Name="Models\Model\TableData\ResourcesSecondaryWorkers.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
    <Table Name="RoutingDestinations">
      <Schema>
        <PropertyDefinitions>
          <ForeignKeyProperty Name="ResourceName" NullString="null" TableKey="Resources.ResourceName" />
          <NodeProperty Name="Node" DefaultValue="null" NullString="null" ValidObjectType="Node" LocationType="Cartesian" />
          <Overrides />
        </PropertyDefinitions>
      </Schema>
      <Rows>
        <FileRef Name="Models\Model\TableData\RoutingDestinations.xml" />
      </Rows>
      <DataBindings ImportMode="Automatic" />
    </Table>
  </Tables>
  <Schedules>
    <Schedule Name="5Day8Hour1stShift" CycleDays="7" StartDate="2009-11-30T00:00:00">
      <DayPatternRefs>
        <DayPatternRef DayNumber="1" DayPattern="8Hour1stShfit" />
        <DayPatternRef DayNumber="2" DayPattern="8Hour1stShfit" />
        <DayPatternRef DayNumber="3" DayPattern="8Hour1stShfit" />
        <DayPatternRef DayNumber="4" DayPattern="8Hour1stShfit" />
        <DayPatternRef DayNumber="5" DayPattern="8Hour1stShfit" />
      </DayPatternRefs>
    </Schedule>
    <Schedule Name="5Day10Hour1stShift" CycleDays="7" StartDate="2009-11-30T00:00:00">
      <DayPatternRefs>
        <DayPatternRef DayNumber="1" DayPattern="10Hour1stShift" />
        <DayPatternRef DayNumber="2" DayPattern="10Hour1stShift" />
        <DayPatternRef DayNumber="3" DayPattern="10Hour1stShift" />
        <DayPatternRef DayNumber="4" DayPattern="10Hour1stShift" />
        <DayPatternRef DayNumber="5" DayPattern="10Hour1stShift" />
      </DayPatternRefs>
    </Schedule>
    <Schedule Name="5Day12Hour1stShift" CycleDays="7" StartDate="2017-12-04T00:00:00">
      <DayPatternRefs>
        <DayPatternRef DayNumber="1" DayPattern="12Hour1stShift" />
        <DayPatternRef DayNumber="2" DayPattern="12Hour1stShift" />
        <DayPatternRef DayNumber="3" DayPattern="12Hour1stShift" />
        <DayPatternRef DayNumber="4" DayPattern="12Hour1stShift" />
        <DayPatternRef DayNumber="5" DayPattern="12Hour1stShift" />
      </DayPatternRefs>
    </Schedule>
    <Schedule Name="5Day12Hour2ndShift" CycleDays="7" StartDate="2017-12-04T00:00:00">
      <DayPatternRefs>
        <DayPatternRef DayNumber="1" DayPattern="12Hour2ndShiftFirstDay" />
        <DayPatternRef DayNumber="2" DayPattern="12Hour2ndShift" />
        <DayPatternRef DayNumber="3" DayPattern="12Hour2ndShift" />
        <DayPatternRef DayNumber="4" DayPattern="12Hour2ndShift" />
        <DayPatternRef DayNumber="5" DayPattern="12Hour2ndShift" />
        <DayPatternRef DayNumber="6" DayPattern="12Hour2ndShiftLastDay" />
      </DayPatternRefs>
    </Schedule>
    <Schedule Name="AllTheTime" CycleDays="7" StartDate="2017-12-04T00:00:00">
      <DayPatternRefs>
        <DayPatternRef DayNumber="1" DayPattern="24Hours" />
        <DayPatternRef DayNumber="2" DayPattern="24Hours" />
        <DayPatternRef DayNumber="3" DayPattern="24Hours" />
        <DayPatternRef DayNumber="4" DayPattern="24Hours" />
        <DayPatternRef DayNumber="5" DayPattern="24Hours" />
        <DayPatternRef DayNumber="6" DayPattern="24Hours" />
        <DayPatternRef DayNumber="7" DayPattern="24Hours" />
      </DayPatternRefs>
    </Schedule>
  </Schedules>
  <DayPatterns>
    <DayPattern Name="8Hour1stShfit">
      <Periods>
        <Period Start="08:00:00" End="16:00:00" Value="1" CostMultiplier="1" />
      </Periods>
    </DayPattern>
    <DayPattern Name="10Hour1stShift">
      <Periods>
        <Period Start="07:00:00" End="17:00:00" Value="1" CostMultiplier="1" />
      </Periods>
    </DayPattern>
    <DayPattern Name="12Hour1stShift">
      <Periods>
        <Period Start="06:00:00" End="18:00:00" Value="1" CostMultiplier="1" />
      </Periods>
    </DayPattern>
    <DayPattern Name="12Hour2ndShift">
      <Periods>
        <Period Start="00:00:00" End="06:00:00" Value="1" CostMultiplier="1" />
        <Period Start="18:00:00" End="1.00:00:00" Value="1" CostMultiplier="1" />
      </Periods>
    </DayPattern>
    <DayPattern Name="12Hour2ndShiftFirstDay">
      <Periods>
        <Period Start="18:00:00" End="1.00:00:00" Value="1" CostMultiplier="1" />
      </Periods>
    </DayPattern>
    <DayPattern Name="12Hour2ndShiftLastDay">
      <Periods>
        <Period Start="00:00:00" End="06:00:00" Value="1" CostMultiplier="1" />
      </Periods>
    </DayPattern>
    <DayPattern Name="24Hours">
      <Periods>
        <Period Start="00:00:00" End="1.00:00:00" Value="1" CostMultiplier="1" />
      </Periods>
    </DayPattern>
  </DayPatterns>
  <ChangeoverMatrices>
    <ChangeoverMatrix Name="MaterialColorMatrix" List="MaterialColor">
      <Changeover From="Green" To="Green" Value="0" />
      <Changeover From="Green" To="White" Value="3" />
      <Changeover From="Green" To="None" Value="3" />
      <Changeover From="White" To="Green" Value="7" />
      <Changeover From="White" To="White" Value="0" />
      <Changeover From="White" To="None" Value="5" />
      <Changeover From="None" To="Green" Value="7" />
      <Changeover From="None" To="White" Value="5" />
      <Changeover From="None" To="None" Value="0" />
    </ChangeoverMatrix>
  </ChangeoverMatrices>
  <ResourceLogExpressions OwnerGanttGroupingExpression="CustomersExpression">
    <ResourceLogExpression Name="MaterialName" Description="" DataFormat="String" EvaluationType="StartTimeValue" GanttDisplayType="EntityGantt" ShowInTooltips="True" ShowInDropdowns="True">
      <Expression>Math.If(Owner.Object.Is.MFGOrder, Owner.ManufacturingOrders.MaterialName, String.Empty)</Expression>
    </ResourceLogExpression>
    <ResourceLogExpression Name="BarFillColor" Description="" DataFormat="Color" EvaluationType="StartTimeValue" GanttColorType="OwnerItemFillColor" ShowInTooltips="True" ShowInDropdowns="True">
      <Expression>Math.If(Owner.Object.Is.MFGOrder, Math.If(Owner.ManufacturingOrders.OrderStatus == List.OrderStatus.WIP &amp;&amp; WorkInProcess.AvailableRowCount &gt; 0 &amp;&amp; Owner.WorkInProcess[1].CurrentRouteNumber == Owner.Routings.RouteNumber, Color.Yellow, Owner.Materials.GanttColor), Color.Gray)</Expression>
    </ResourceLogExpression>
    <ResourceLogExpression Name="BarOutlineColor" Description="" DataFormat="Color" EvaluationType="EndTimeValue" GanttColorType="OwnerItemBorderColor" ShowInTooltips="True" ShowInDropdowns="True">
      <Expression>Math.If(Owner.Object.Is.MFGOrder, Math.If(TimeNow &gt; Owner.ManufacturingOrders.DueDate, Color.Red, Owner.Materials.GanttColor), Color.Gray)</Expression>
    </ResourceLogExpression>
    <ResourceLogExpression Name="Customer" Description="" DataFormat="String" EvaluationType="StartTimeValue" ShowInTooltips="True" ShowInDropdowns="True">
      <Expression>Math.If(Object.Is.Vehicle, "Riding", Math.If(Owner.Object.Is.PurchaseOrder, "Raw Material", Owner.ManufacturingOrders.Customer))</Expression>
    </ResourceLogExpression>
    <ResourceLogExpression Name="CustomersExpression" Description="" DataFormat="String" EvaluationType="StartTimeValue" ShowInTooltips="True" ShowInDropdowns="True">
      <Expression>Math.If(Object.Is.Vehicle, "Riding", Math.If(Owner.Object.Is.PurchaseOrder, "Raw Material", Math.If(Owner.ManufacturingOrders.Customer == "Stock", Owner.ManufacturingOrders.Customer, "Customers\" + Owner.ManufacturingOrders.Customer)))</Expression>
    </ResourceLogExpression>
    <ResourceLogExpression Name="Location" Description="" DataFormat="String" EvaluationType="StartTimeValue" ShowInTooltips="True" ShowInDropdowns="True">
      <Expression>Math.If(Object.Is.Vehicle, "Riding", Owner.ModelEntity.Location.Parent.Name)</Expression>
    </ResourceLogExpression>
  </ResourceLogExpressions>
  <TaskLogExpressions>
    <TaskLogExpression Name="Area" Description="" DataFormat="String" EvaluationType="StartTimeValue" ShowInTooltips="True" ShowInDropdowns="True">
      <Expression>Resources.Area</Expression>
    </TaskLogExpression>
    <TaskLogExpression Name="Workcell" Description="" DataFormat="String" EvaluationType="StartTimeValue" ShowInTooltips="True" ShowInDropdowns="True">
      <Expression>Resources.Workcell</Expression>
    </TaskLogExpression>
    <TaskLogExpression Name="Resource" Description="" DataFormat="String" EvaluationType="StartTimeValue" ShowInTooltips="True" ShowInDropdowns="True">
      <Expression>Resources.ResourceName.Name</Expression>
    </TaskLogExpression>
    <TaskLogExpression Name="AreaExpression" Description="" DataFormat="String" EvaluationType="StartTimeValue" ShowInTooltips="True" ShowInDropdowns="True">
      <Expression>"Tasks\" + Resources.Area</Expression>
    </TaskLogExpression>
  </TaskLogExpressions>
  <ActiveResourceUsageLogExpressions>
    <ActiveResourceUsageLogExpression Purpose="OwnerGanttOwnerRowName" Name="Location" />
  </ActiveResourceUsageLogExpressions>
  <SaveHistories>
    <SaveHistory SavedDateTime="2022-04-21T20:11:47" ProductVersion="14.238.0.0" Edition="Internal" />
    <SaveHistory SavedDateTime="2022-06-24T12:26:50" ProductVersion="15.241.0.0" Edition="Internal" />
    <SaveHistory SavedDateTime="2023-04-30T18:42:34" ProductVersion="15.251.31171.0" Edition="Professional" />
  </SaveHistories>
  <Graphics>
    <Rectangle Center="5.8005028241811 -0.0116212461773789 -12.356017672609" Width="90.485048594705773" Height="76.007440819552869" ExternallyVisible="True" Locked="True">
      <Decorations>
        <Decoration SurfaceId="0">
          <MaterialRef Id="0bf8c0e6-2825-4144-89d6-dd9516f17990" />
        </Decoration>
      </Decorations>
    </Rectangle>
    <Line Center="31.211856558314 0 -26.8332206415584" LineWidth="1" YHeight="2" Locked="True">
      <Points>
        <Point Location="18.021486558314 0 -50.6445006415584" />
        <Point Location="50.556076558314 0 -50.5171406415584" />
        <Point Location="50.687416558314 0 25.6157133406698" />
        <Point Location="18.567386558314 0 25.6042663495557" />
      </Points>
      <Decorations>
        <Decoration SurfaceId="0">
          <MaterialRef Id="f590502b-e46a-4b28-92ba-a3ee40000793" />
        </Decoration>
      </Decorations>
    </Line>
    <Line Center="10.3625529730774 -3.814697E-06 8.86935565340626" LineWidth="1" YHeight="2" Locked="True">
      <Points>
        <Point Location="-39.6802361407975 -3.814697E-06 2.35848935547963" />
        <Point Location="-39.648924444648 0 25.6445006415584" />
        <Point Location="25.9967929730774 0 25.5208246534063" />
        <Point Location="25.8040029730774 7.629395E-06 8.65508065340626" />
      </Points>
      <Decorations>
        <Decoration SurfaceId="0">
          <MaterialRef Id="f590502b-e46a-4b28-92ba-a3ee40000793" />
        </Decoration>
      </Decorations>
    </Line>
    <Queue Queue="AssemblyNode.RoutingOut.RouteRequestQueue" Alignment="Inline" ExternallyVisible="True" Locked="True">
      <Points>
        <Point Location="-32.9467074795787 0 16.7480956934685" />
        <Point Location="-31.9698765153136 0 23.2196008317245" />
        <Point Location="3.01288239242839 0 23.7690682491236" />
        <Point Location="2.95183045716183 0 22.1206659969263" />
        <Point Location="-29.7109549104507 0 21.5101466442606" />
        <Point Location="-29.5888510399176 0 19.4343808451974" />
        <Point Location="2.70762271609557 0 19.7396405215302" />
      </Points>
    </Queue>
    <FloorLabel Center="-13.4676914267277 1.14440899992019E-05 6.01068569937971" Width="12.448925789608072" Height="2.848492724968958" Locked="True" CharsPerLine="9" YHeight="2" Text="Assembly Line&#xD;&#xA;" />
    <Line Center="-2.82939144168598 0 -4.6782666415584" LineWidth="1" YHeight="2" Locked="True">
      <Points>
        <Point Location="-26.553563441686 0 2.4119843584416" />
        <Point Location="18.249046558314 1.525879E-05 2.4892803584416" />
        <Point Location="18.220706558314 1.907349E-05 -6.8776416415584" />
      </Points>
      <Decorations>
        <Decoration SurfaceId="0">
          <MaterialRef Id="f590502b-e46a-4b28-92ba-a3ee40000793" />
        </Decoration>
      </Decorations>
    </Line>
    <Line Center="-19.934143441686 -3.814697E-06 -43.1607806415584" LineWidth="1" YHeight="2" Locked="True">
      <Points>
        <Point Location="-37.0736491914694 -3.814697E-06 2.12124177518046" />
        <Point Location="-39.695533441686 -1.144409E-05 2.0799003584416" />
        <Point Location="-39.641283441686 -3.814697E-06 -50.4487806415584" />
        <Point Location="18.058356558314 -3.814697E-06 -50.5655306415584" />
        <Point Location="17.787736558314 0 -16.1641206415584" />
      </Points>
      <Decorations>
        <Decoration SurfaceId="0">
          <MaterialRef Id="f590502b-e46a-4b28-92ba-a3ee40000793" />
        </Decoration>
      </Decorations>
    </Line>
    <Rectangle Center="-50.6443067796552 0 -0.57875922169994" Width="21.086219557317662" Height="20.8230053830886" ExternallyVisible="True" Locked="True">
      <Decorations>
        <Decoration SurfaceId="0">
          <MaterialRef Id="7a454e16-31de-4c8a-ab82-082e49ce7fe3" />
        </Decoration>
      </Decorations>
    </Rectangle>
    <Plot Center="34.7784422700529 1.52587900004164E-05 -32.8149220651109" Width="23.24694" Height="12.6423" Rotation="-0.000392809" Locked="True" Type="Legacy" Title="Orders Shipped" XAxisLabel="Time" YAxisLabel="Value" Look="Nature Colors;Pastel Kit" TextScale="1">
      <Range Type="Days">6</Range>
      <StatusDataSource DataSourceName="[Expressions]">
        <StatusDataSourceExpressions>
          <StatusDataSourceExpression Series="&quot;Orders Shipped&quot;" Value="Customer.TimeInSystem.NumberObservations" />
        </StatusDataSourceExpressions>
      </StatusDataSource>
    </Plot>
    <FloorLabel Center="-20.9502815291669 -1.90734900016309E-05 -44.5259077751183" Width="16.00296" Height="6.682538" Locked="True" CharsPerLine="9" YHeight="6" Text="Component&#xD;&#xA;Manufacturing&#xD;&#xA;" />
    <FloorLabel Center="34.0446756026391 -1.52587900004164E-05 -44.9056396858835" Width="17.44729" Height="6.887088" Locked="True" CharsPerLine="9" YHeight="6" Text="Shipping and Receiving" />
    <Queue Queue="PackAndShip.MemberInputBuffer.Contents" Alignment="OrientedPoint" Locked="True">
      <Points>
        <Point Location="43.40426 -2.719894E-05 2.91473699999997" Direction="2.140572 -3.814697E-06 0.008740664" />
        <Point Location="43.39418 -2.929649E-05 5.07227899999997" Direction="2.116859 7.629395E-06 0.02049255" />
        <Point Location="43.4753 -3.60086E-05 7.10450099999997" Direction="2.133198 1.907349E-06 -0.00363636" />
        <Point Location="43.49558 -1.886555E-05 9.14702599999998" Direction="2.15633 -1.716614E-05 -0.007293701" />
        <Point Location="43.54947 -4.768372E-05 10.905302" Direction="2.055281 -9.536743E-06 -0.03538513" />
        <Point Location="43.50146 -2.861023E-05 13.012353" Direction="2.088181 -5.722046E-06 -0.06596375" />
        <Point Location="43.50033 -2.861023E-05 15.027153" Direction="2.021847 -5.722046E-06 0.004206657" />
        <Point Location="43.46755 -1.335144E-05 17.013193" Direction="2.032593 7.629395E-06 -0.06292152" />
        <Point Location="43.46701 0 19.122213" Direction="2.140572 -3.814697E-06 0.008740664" />
        <Point Location="43.51056 0 20.951313" Direction="2.140572 -3.814697E-06 0.008740664" />
        <Point Location="43.46701 0 22.998163" Direction="2.140572 -3.814697E-06 0.008740664" />
        <Point Location="33.45053 0 3.00874399999997" Direction="2.140572 -3.814697E-06 0.008740664" />
        <Point Location="33.53763 0 5.05559099999997" Direction="2.140572 -3.814697E-06 0.008740664" />
        <Point Location="33.53763 0 7.18953799999997" Direction="2.140572 -3.814697E-06 0.008740664" />
        <Point Location="33.58118 0 9.06218399999998" Direction="2.140572 -3.814697E-06 0.008740664" />
        <Point Location="33.53763 0 11.196133" Direction="2.140572 -3.814697E-06 0.008740664" />
        <Point Location="33.45053 0 13.068773" Direction="2.140572 -3.814697E-06 0.008740664" />
        <Point Location="33.49408 0 15.072073" Direction="2.140572 -3.814697E-06 0.008740664" />
        <Point Location="33.58118 0 17.162473" Direction="2.140572 -3.814697E-06 0.008740664" />
        <Point Location="33.58118 0 19.209313" Direction="2.140572 -3.814697E-06 0.008740664" />
        <Point Location="33.62473 0 21.125513" Direction="2.140572 -3.814697E-06 0.008740664" />
        <Point Location="33.53763 0 23.085263" Direction="2.140572 -3.814697E-06 0.008740664" />
      </Points>
    </Queue>
    <Queue Queue="Stock.Processing.Contents" ExternallyVisible="True">
      <Points>
        <Point Location="7.20586358672211 0 -15.8058784634876" />
        <Point Location="14.7577115587627 0 -15.8058784634876" />
        <Point Location="14.7107277244145 0 -16.7647418277258" />
        <Point Location="7.14241483121773 0 -16.6431097913934" />
        <Point Location="7.18898083816555 0 -17.5785307335331" />
        <Point Location="14.7136167715417 0 -17.603265734845" />
        <Point Location="14.699365147117 0 -18.571760076667" />
        <Point Location="7.27886475354542 0 -18.2996750622361" />
        <Point Location="7.2541297522335 0 -19.3138101160242" />
        <Point Location="14.8972451576122 0 -19.5858951304551" />
        <Point Location="14.8972451576122 0 -20.649500186867" />
        <Point Location="7.27886475354542 0 -20.3774151724361" />
        <Point Location="7.35306975748112 0 -21.2926102209766" />
        <Point Location="14.8230401536765 0 -21.6636352406551" />
        <Point Location="14.7488351497408 0 -22.6777702944433" />
        <Point Location="7.32833475616922 0 -22.6035652905075" />
        <Point Location="7.35306975748112 0 -23.4692903364242" />
        <Point Location="14.7735701510527 0 -23.6177003442956" />
        <Point Location="14.7488351497408 0 -24.6318353980838" />
        <Point Location="7.37780475879303 0 -24.2360753770933" />
        <Point Location="7.23905905760846 0 -25.5760950403641" />
        <Point Location="14.7488351497408 0 -25.4728254426885" />
        <Point Location="14.7515220106249 0 -26.9443770615094" />
        <Point Location="7.48626168534812 0 -26.9443770615094" />
        <Point Location="7.55964815328021 0 -28.8524252277437" />
        <Point Location="14.8982949464891 0 -28.8891184617097" />
        <Point Location="14.824908478557 0 -30.5403139901817" />
        <Point Location="7.26610228155186 0 -30.5403139901817" />
        <Point Location="7.15602257965372 0 -32.6318283262463" />
        <Point Location="14.9349881804552 0 -32.7052147941783" />
        <Point Location="14.788215244591 0 -34.5398764924806" />
        <Point Location="7.33948874948395 0 -34.5398764924806" />
        <Point Location="7.3027955155179 0 -36.2644584888847" />
        <Point Location="14.6414423087268 0 -36.3745381907828" />
        <Point Location="14.4946693728626 0 -38.1358134211529" />
        <Point Location="7.11932934568768 0 -38.2458931230511" />
        <Point Location="6.82578347395932 0 -39.823702183591" />
        <Point Location="14.0910437992361 0 -39.7870089496249" />
      </Points>
    </Queue>
    <Queue Queue="Receiving.Processing.Contents" ExternallyVisible="True" Locked="True">
      <Points>
        <Point Location="36.1362086888564 0 -20.6001591998288" />
        <Point Location="43.6880566608971 0 -20.6001591998288" />
        <Point Location="43.7258785445794 0 -21.5837575811984" />
        <Point Location="36.0798270743242 0 -21.7130091258345" />
        <Point Location="36.1087252209321 0 -22.821575092977" />
        <Point Location="43.8453754572939 0 -22.7862393775704" />
        <Point Location="43.9222644101278 0 -23.9510764685024" />
        <Point Location="36.0070641590592 0 -23.986412183909" />
        <Point Location="35.9717284436526 0 -25.3998408001712" />
        <Point Location="44.0282715563474 0 -25.2938336539516" />
      </Points>
    </Queue>
    <AnimationSetup MinimumNumberOfFramesToDisplayIdleAnimation="10" />
  </Graphics>
</Fragment>