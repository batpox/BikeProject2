<Fragment>
  <Process Name="OnRunInitialized" IsOverride="True" ShowAsUserExecutableProcess="False" InterfaceProcessID="Object.OnRunInitialized" BeginStepID="2" Category="_Initialization" Description="Initialize ManufacturingOrders table, then iterate through each Materials row and its associated MaterialLots row to sum total quantity involved. If itâ€™s a ManufacturingMaterial then create that quantity of MfgOrders and send to Stock. Otherwise create that quantity of PurchaseOrders and send to Receiving.">
    <Properties />
    <Steps>
      <Step Type="Search" Name="ManufacturingOrdersOutput" Description="Search all rows in Manufacturing Orders table to add row number to each row." Color="d7e3bc" ID="2">
        <Properties>
          <Property Name="CollectionType">TableRows</Property>
          <Property Name="EntityType">DefaultEntity</Property>
          <Property Name="TableName">ManufacturingOrders</Property>
          <Property Name="Limit">Infinity</Property>
          <Property Name="CopyOverTableRowReferences">False</Property>
          <Property Name="SetTableRowConflictResolution">Abort</Property>
        </Properties>
        <Exit Name="Original" Type="Primary" NextID="5" />
        <Exit Name="Found" Type="Alternate" NextID="3" />
      </Step>
      <Step Type="Assign" Name="CurrentRowNumber" ID="3">
        <Properties>
          <Property Name="StateVariableName">
            <Value>CurrentRowNumber</Value>
          </Property>
          <Property Name="NewValue">CurrentRowNumber + 1</Property>
        </Properties>
        <Exit Name="Exit" Type="Primary" NextID="4" />
      </Step>
      <Step Type="Assign" Name="ManufacturingOrders.RowNumber" ID="4">
        <Properties>
          <Property Name="StateVariableName">
            <Value>ManufacturingOrders.RowNumber</Value>
          </Property>
          <Property Name="NewValue">CurrentRowNumber</Property>
        </Properties>
      </Step>
      <Step Type="Search" Name="Materials" Description="Search all rows in Materials table to prepare to take additional action for each material listed." ID="5">
        <Properties>
          <Property Name="CollectionType">TableRows</Property>
          <Property Name="TableName">Materials</Property>
          <Property Name="Limit">Infinity</Property>
          <Property Name="CopyOverTableRowReferences">False</Property>
          <Property Name="SetTableRowConflictResolution">Abort</Property>
        </Properties>
        <Exit Name="Found" Type="Alternate" NextID="16" />
      </Step>
      <Step Type="Create" Name="Entity" ID="6">
        <Properties>
          <Property Name="EntityType">MFGOrder</Property>
          <Property Name="NumberToCreate">Token.ReturnValue</Property>
        </Properties>
        <Exit Name="Created" Type="Alternate" NextID="7" />
      </Step>
      <Step Type="Assign" Name="MaterialRef" ID="7">
        <Properties>
          <Property Name="StateVariableName">
            <Value>ModelEntity.MaterialRef</Value>
          </Property>
          <Property Name="NewValue">Materials.MaterialName</Property>
        </Properties>
        <Exit Name="Exit" Type="Primary" NextID="8" />
      </Step>
      <Step Type="Assign" Name="InitialQtyFlag" ID="8">
        <Properties>
          <Property Name="StateVariableName">
            <Value>ModelEntity.InitialQtyFlag</Value>
          </Property>
          <Property Name="NewValue">True</Property>
        </Properties>
        <Exit Name="Exit" Type="Primary" NextID="19" />
      </Step>
      <Step Type="Decide" Name="Manufacturing Material" ID="9">
        <Properties>
          <Property Name="DecideType">ConditionBased</Property>
          <Property Name="ConditionOrProbability">Materials.MaterialClass == "Manufacturing Material"</Property>
        </Properties>
        <Exit Name="True" Type="Primary" NextID="6" />
        <Exit Name="False" Type="Alternate" NextID="10" />
      </Step>
      <Step Type="Create" Name="Entity" ID="10">
        <Properties>
          <Property Name="EntityType">PurchaseOrder</Property>
          <Property Name="NumberToCreate">Token.ReturnValue</Property>
        </Properties>
        <Exit Name="Created" Type="Alternate" NextID="11" />
      </Step>
      <Step Type="Assign" Name="MaterialRef" ID="11">
        <Properties>
          <Property Name="StateVariableName">
            <Value>ModelEntity.MaterialRef</Value>
          </Property>
          <Property Name="NewValue">Materials.MaterialName</Property>
        </Properties>
        <Exit Name="Exit" Type="Primary" NextID="12" />
      </Step>
      <Step Type="Assign" Name="InitialQtyFlag" ID="12">
        <Properties>
          <Property Name="StateVariableName">
            <Value>ModelEntity.InitialQtyFlag</Value>
          </Property>
          <Property Name="NewValue">True</Property>
        </Properties>
        <Exit Name="Exit" Type="Primary" NextID="18" />
      </Step>
      <Step Type="Assign" Name="Picture" ID="13">
        <Properties>
          <Property Name="StateVariableName">
            <Value>ModelEntity.Picture</Value>
          </Property>
          <Property Name="NewValue">Materials.PictureId</Property>
        </Properties>
        <Exit Name="Exit" Type="Primary" NextID="14" />
      </Step>
      <Step Type="Transfer" Name="Transfer first station" ID="14">
        <Properties>
          <Property Name="NodeName">Input@Receiving</Property>
        </Properties>
      </Step>
      <Step Type="Transfer" Name="Transfer first station" ID="15">
        <Properties>
          <Property Name="NodeName">Input@Stock</Property>
        </Properties>
      </Step>
      <Step Type="Search" Name="MaterialLots" Description="Search all material lots associated with each specific material and sum the quantity. Store sum in Token.ReturnValue for later use." ID="16">
        <Properties>
          <Property Name="CollectionType">TableRows</Property>
          <Property Name="TableName">MaterialLots</Property>
          <Property Name="SearchType">ForwardSumExpression</Property>
          <Property Name="SearchExpression">MaterialLots.Quantity</Property>
          <Property Name="Limit">Infinity</Property>
          <Property Name="CopyOverTableRowReferences">False</Property>
          <Property Name="SetTableRowConflictResolution">Abort</Property>
        </Properties>
        <Exit Name="Original" Type="Primary" NextID="9" />
      </Step>
      <Step Type="Assign" Name="Picture" ID="17">
        <Properties>
          <Property Name="StateVariableName">
            <Value>ModelEntity.Picture</Value>
          </Property>
          <Property Name="NewValue">Materials.PictureId</Property>
        </Properties>
        <Exit Name="Exit" Type="Primary" NextID="15" />
      </Step>
      <Step Type="Assign" Name="Priority" ID="18">
        <Properties>
          <Property Name="StateVariableName">
            <Value>ModelEntity.Priority</Value>
          </Property>
          <Property Name="NewValue">2</Property>
        </Properties>
        <Exit Name="Exit" Type="Primary" NextID="13" />
      </Step>
      <Step Type="Assign" Name="Priority" ID="19">
        <Properties>
          <Property Name="StateVariableName">
            <Value>ModelEntity.Priority</Value>
          </Property>
          <Property Name="NewValue">2</Property>
        </Properties>
        <Exit Name="Exit" Type="Primary" NextID="17" />
      </Step>
    </Steps>
  </Process>
</Fragment>